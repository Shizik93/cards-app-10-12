{"version":3,"sources":["common/c1-SuperInputText/SuperInputText.module.css","pages/RestorePassword/RestorePassword.module.css","common/c2-SuperButton/SuperButton.module.css","common/c3-SuperCheckbox/SuperCheckbox.module.css","pages/Registration/Registration.module.css","common/c8-SuperDoubleRange/SuperDoubleRange.module.css","pages/CheckEmail/CheckEmail.module.css","pages/NewPassword/NewPassword.module.css","pages/Login/Login.module.css","pages/Profile/profile.module.css","pages/Test/test.module.css","common/c2-SuperButton/SuperButton.tsx","Header/Header.tsx","pages/Error/Error.tsx","common/c1-SuperInputText/SuperInputText.tsx","common/c3-SuperCheckbox/SuperCheckbox.tsx","API/InitialData.ts","API/LoginAPI.ts","bll/reducers/login-reducer.ts","pages/Login/Login.tsx","API/NewPasswordAPI.ts","bll/reducers/restorePassword-reducer.ts","pages/RestorePassword/RestorePassword.tsx","pages/Profile/Profile.tsx","API/RegAPI.ts","bll/reducers/registration-reducer.ts","pages/Registration/Registration.tsx","common/c4-SuperEditableSpan/SuperEditableSpan.tsx","common/c5-SuperSelect/SuperSelect.tsx","common/c6-SuperRadio/SuperRadio.tsx","common/c7-SuperRange/SuperRange.tsx","common/c8-SuperDoubleRange/SuperDoubleRange.tsx","pages/Test/Test.tsx","pages/CheckEmail/Group 281.svg","pages/CheckEmail/CheckEmail.tsx","pages/NewPassword/NewPassword.tsx","RouteComponent/RouteComponent.tsx","App.tsx","bll/reducers/error-reducer.ts","bll/reducers/profile-reducer.ts","bll/store.ts","index.tsx"],"names":["module","exports","SuperButton","red","className","restProps","finalClassName","s","default","PATH","Header","isAuth","useSelector","state","login","to","Error","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","style","borderRadius","SuperCheckbox","onChangeChecked","children","checkbox","checked","initial","axios","create","baseURL","withCredentials","LoginAPI","email","password","rememberMe","post","delete","initialState","_id","name","avatar","publicCardPacksCount","setLogin","data","logoutUserTC","dispatch","then","res","console","dir","Login","useDispatch","useState","setEmail","setPassword","setRememberMe","setLoginTC","placeholder","defaultChecked","onClick","NewPasswordAPI","from","message","resetPasswordToken","isRecovery","newPass","emailRecovery","RestorePassword","restorePassword","newPassword","defaultValue","text","success","forgotNewPasswordTC","Profile","profile","alt","src","RegAPI","isRegistered","setRegistrationError","Registration","registration","confirmPassword","setConfirmPassword","successful","catch","RegisteredUserTC","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","SuperSelect","options","onChangeOption","mappedOptions","map","f","i","SuperRadio","onChangeCallback","o","SuperRange","onChangeRange","finalRangeClassName","range","SuperDoubleRange","props","wrapper","min","double","max","Test","test","CheckEmail","checkEmail","img","NewPassword","setNewPassword","tokenId","useParams","token","RouteComponent","path","element","App","useEffect","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78b8e41f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__WuyFe\",\"input\":\"SuperInputText_input__1XNDN\",\"errorInput\":\"SuperInputText_errorInput__2h4-F\",\"error\":\"SuperInputText_error__2Ii1S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPassword\":\"RestorePassword_newPassword__3t6ZQ\",\"text\":\"RestorePassword_text__3l-6s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1Oj1f\",\"red\":\"SuperButton_red__17evz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1wekg\",\"spanClassName\":\"SuperCheckbox_spanClassName__309sz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registration\":\"Registration_registration__1xru0\",\"error\":\"Registration_error__3n58D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"double\":\"SuperDoubleRange_double__j_YjA\",\"wrapper\":\"SuperDoubleRange_wrapper__jJdK4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkEmail\":\"CheckEmail_checkEmail__7WNld\",\"text\":\"CheckEmail_text__2t-dL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPassword\":\"NewPassword_newPassword__5g8OE\",\"text\":\"NewPassword_text__r0oUX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__3IC9Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__3xJtU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"test\":\"test_test__3Z_re\"};","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import {NavLink} from \"react-router-dom\";\nimport SuperButton from \"../common/c2-SuperButton/SuperButton\";\nimport {useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../bll/store\";\n\n\nexport const PATH = {\n    ERROR_404: '/error404',\n    LOGIN: '/login',\n    RESTORE_PASSWORD: '/restore-password',\n    PROFILE: '/profile',\n    REGISTRATION: '/registration',\n    TEST: '/test',\n    CHECK_EMAIL: '/check-email',\n    NEW_PASSWORD:'/new-password/:tokenId',\n\n}\n\nexport const Header = () => {\n    const isAuth = useSelector((state: AppRootStateType) => state.login.isAuth)\n    return (\n        <div>\n            {!isAuth && <SuperButton><NavLink to={PATH.LOGIN}>Login </NavLink></SuperButton>}\n            {isAuth && <SuperButton><NavLink to={PATH.PROFILE}>Profile </NavLink></SuperButton>}\n        </div>\n    )\n}","import React from \"react\";\n\nexport const Error = () => {\n  return(\n      <div>\n          Error 404\n      </div>\n  )\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className,\n        spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${error? s.errorInput:s.superInput}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={type}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span style={{borderRadius:'48px'}} className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n        <input\n        type={'checkbox'}\n        onChange={onChangeCallback}\n        className={finalInputClassName}\n\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n        />\n        {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox\n\n\n/*\n<label>\n<input\ntype={'checkbox'}\nonChange={onChangeCallback}\nclassName={finalInputClassName}\n\n{...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n/>\n{children && <span className={s.spanClassName}>{children}</span>}\n</label> // благодаря label нажатие на спан передастся в инпут\n*/\n","import axios from \"axios\";\n\nexport const initial = axios.create({\n    baseURL: 'https://neko-back.herokuapp.com/2.0',\n    withCredentials: true\n})","import { initial } from \"./InitialData\"\n\nexport const LoginAPI = {\n    setLogin(email: string, password: string, rememberMe: boolean) {\n        return initial.post('auth/login', {email, password, rememberMe})\n    },\n    me() {\n        return initial.post('auth/me')\n\n    },\n    logout() {\n        return initial.delete('auth/me')\n\n    }\n}","import {Dispatch} from \"redux\";\nimport {LoginAPI} from \"../../API/LoginAPI\";\n\nconst initialState: initialStateType = {\n    isAuth: false,\n    _id: null,\n    email: null,\n    name: null,\n    avatar: null,\n    publicCardPacksCount: 0,\n    error: ''\n}\ntype initialStateType = {\n    isAuth: boolean\n    _id: string | null;\n    email: string | null;\n    name: string | null;\n    avatar?: string | null;\n    publicCardPacksCount: number; // количество колод\n    error: string\n}\n\nexport const loginReducer = (state: initialStateType = initialState, action: ReducerType): initialStateType => {\n    switch (action.type) {\n        case 'login-reducer/SET-LOGIN':\n        case \"login-reducer/LOGOUT-USER\": {\n            return {...state, ...action.data}\n        }\n        default:\n            return state\n    }\n}\ntype ReducerType = setLoginType | logoutUserType\nconst setLogin = (data: initialStateType) => {\n    return {\n        type: 'login-reducer/SET-LOGIN',\n        data\n    } as const\n}\ntype setLoginType = ReturnType<typeof setLogin>\nexport const setLoginTC = (email: string, password: string, rememberMe: boolean) => (dispatch: Dispatch) => {\n    LoginAPI.setLogin(email, password, rememberMe).then((res) => {\n        console.dir(res)\n        dispatch(setLogin({\n            isAuth: true,\n            _id: res.data._id,\n            email: res.data.email,\n            name: res.data.name,\n            avatar: res.data.avatar ? res.data.avatar : null,\n            publicCardPacksCount: res.data.publicCardPacksCount,\n            error: res.data.error\n        }))\n    })\n\n}\n\nconst logoutUser = () => {\n    return {\n        type: 'login-reducer/LOGOUT-USER',\n        data: initialState\n    } as const\n}\ntype logoutUserType = ReturnType<typeof logoutUser>\nexport const logoutUserTC = () => (dispatch: Dispatch) => {\n    LoginAPI.logout().then((res) => {\n        console.dir(res)\n        dispatch(logoutUser())\n    })\n\n}\nexport const authMeTC = () => (dispatch: Dispatch) => {\n    LoginAPI.me().then((res) => {\n        console.dir(res)\n        dispatch(setLogin({\n            isAuth: true,\n            _id: res.data._id,\n            email: res.data.email,\n            name: res.data.name,\n            avatar: res.data.avatar ? res.data.avatar : null,\n            publicCardPacksCount: res.data.publicCardPacksCount,\n            error: res.data.error\n        }))\n    })\n}","import React, {useState} from \"react\";\nimport SuperInputText from \"../../common/c1-SuperInputText/SuperInputText\";\nimport SuperButton from \"../../common/c2-SuperButton/SuperButton\";\nimport style from './Login.module.css'\nimport SuperCheckbox from \"../../common/c3-SuperCheckbox/SuperCheckbox\";\nimport {Navigate, NavLink} from \"react-router-dom\";\nimport {PATH} from \"../../Header/Header\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setLoginTC} from \"../../bll/reducers/login-reducer\";\nimport {AppRootStateType} from \"../../bll/store\";\n\nexport const Login = () => {\n    const isAuth = useSelector((state: AppRootStateType) => state.login.isAuth)\n    const dispatch = useDispatch()\n    const [email, setEmail] = useState('akayuda93@gmail.com')\n    const [password, setPassword] = useState('qwerty12')\n    const [rememberMe, setRememberMe] = useState(false)\n\n\n    const login = () => {\n        dispatch(setLoginTC(email, password, rememberMe))\n\n    }\n    const onChangeEmail = (e: React.FormEvent<HTMLInputElement>) => {\n        setEmail(e.currentTarget.value)\n\n    }\n    const onChangePassword = (e: React.FormEvent<HTMLInputElement>) => {\n        setPassword(e.currentTarget.value)\n\n    }\n    const onChangeRememberMe = (e: React.FormEvent<HTMLInputElement>) => {\n        setRememberMe(e.currentTarget.checked)\n\n    }\n    if (isAuth) {\n        return (<Navigate to={PATH.PROFILE}/>)\n    }\n    return (\n        <div>\n            <div className={style.login}>\n                <h1>It-incubator</h1>\n                <h2>Sign In</h2>\n                <div>\n\n                    <div><SuperInputText\n                        onEnter={login}\n                        value={email}\n                        onChange={onChangeEmail}\n                        type={'email'}\n                        placeholder={'Email'}/>\n                    </div>\n                    <div><SuperInputText\n                        onEnter={login}\n                        value={password}\n                        onChange={onChangePassword}\n                        type={'password'}\n                        placeholder={'Password'}/></div>\n                    <SuperCheckbox\n                        defaultChecked={rememberMe}\n                        onChange={onChangeRememberMe}>\n\n                        Remember me\n                    </SuperCheckbox>\n                </div>\n                <div>\n                    <NavLink to={PATH.RESTORE_PASSWORD}>Forgot Password</NavLink>\n                </div>\n                <div>\n                    <SuperButton onClick={login}>Login</SuperButton></div>\n                <div>Don't have an account?</div>\n                <div>\n                    <NavLink to={PATH.REGISTRATION}>Sign Up</NavLink>\n                </div>\n            </div>\n        </div>\n    )\n}","import {initial} from \"./InitialData\";\ntype AxiosForgotPasswordType = {\n    success: boolean\n}\nexport const NewPasswordAPI = {\n    forgotNewPassword(email: string) {\n        return initial.post<AxiosForgotPasswordType>('/auth/forgot', {\n            email,\n            from: 'AlexKayuda',\n            message: `<div style=\"background-color: lime; padding: 15px\">\terror: string;password recovery link: \t}<a href='https://shizik93.github.io/cards-app-10-12/#/set-new-password/$token$'>link</a></div>`\n        }, {})\n    },\n    setNewPassword(password: string,resetPasswordToken:string) {\n        return initial.post('/auth/set-new-password', {\n            password,\n            resetPasswordToken,\n        })\n    }\n}","import {Dispatch} from \"redux\";\nimport {NewPasswordAPI} from \"../../API/NewPasswordAPI\";\n\nconst initialState: initialStateType = {\n    isRecovery: false,\n    newPass: false,\n    emailRecovery: '',\n}\ntype initialStateType = {\n    isRecovery: boolean\n    newPass: boolean\n    emailRecovery: string\n}\n\nexport const restorePasswordReducer = (state: initialStateType = initialState, action: restorePasswordReducerActionsType): initialStateType => {\n    switch (action.type) {\n        case 'restorePassword-reducer/EMAIL-RECOVERY': {\n            return {...state,emailRecovery:action.email}\n        }\n        case \"restorePassword-reducer/SET-IS-RECOVERY\":{\n            return {...state,isRecovery:action.success}\n        }\n        case \"restorePassword-reducer/SET-NEW-PASSWORD\":{\n            return {...state,newPass:action.newPass}\n        }\n        default:\n            return state\n    }\n}\ntype restorePasswordReducerActionsType = emailRecoveryType | setIsRecoveryType | setNewPasswordType\n\nconst emailRecovery = (email: string) => {\n    return {\n        type: 'restorePassword-reducer/EMAIL-RECOVERY',\n        email\n    } as const\n\n}\ntype emailRecoveryType = ReturnType<typeof emailRecovery>\nconst setIsRecovery = (success: boolean) => {\n    return {\n        type: 'restorePassword-reducer/SET-IS-RECOVERY',\n        success\n    } as const\n}\ntype setIsRecoveryType = ReturnType<typeof setIsRecovery>\nconst setNewPassword = (newPass: boolean) => {\n    return {\n        type: 'restorePassword-reducer/SET-NEW-PASSWORD',\n        newPass\n    } as const\n}\ntype setNewPasswordType = ReturnType<typeof setNewPassword>\nexport const forgotNewPasswordTC = (email: string) => (dispatch: Dispatch) => {\n    NewPasswordAPI.forgotNewPassword(email).then((res) => {\n        dispatch(setIsRecovery(res.data.success))\n        dispatch(emailRecovery(email))\n    })\n}\nexport const newPasswordTC = (password: string, token: string) => (dispatch: Dispatch) => {\n    NewPasswordAPI.setNewPassword(password, token).then(() => {\n        dispatch(setNewPassword(true))\n\n    })\n\n}","import React, {useState} from \"react\";\nimport style from './RestorePassword.module.css'\nimport SuperInputText from \"../../common/c1-SuperInputText/SuperInputText\";\nimport SuperButton from \"../../common/c2-SuperButton/SuperButton\";\nimport {forgotNewPasswordTC} from \"../../bll/reducers/restorePassword-reducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../bll/store\";\nimport {Navigate} from \"react-router-dom\";\nimport {PATH} from \"../../Header/Header\";\n\nexport const RestorePassword = () => {\n    const dispatch = useDispatch()\n    const emailRecovery = useSelector((state: AppRootStateType) => state.restorePassword.emailRecovery)\n    const [email, setEmail] = useState('')\n    const onChangeEmail = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setEmail(e.currentTarget.value)\n    }\n    if (emailRecovery) {\n        return (\n            <Navigate to={PATH.CHECK_EMAIL}/>\n        )\n    }\n    return (\n        <div>\n            <div className={style.newPassword}>\n                <h1>It-incubator</h1>\n                <h2>Forgot your password?</h2>\n                <div><SuperInputText defaultValue={email} onChange={onChangeEmail} placeholder={'Email'}/></div>\n                <div className={style.text}>Enter your email address and we will send you further instructions</div>\n                <div><SuperButton\n                    onClick={() => {\n                        dispatch(forgotNewPasswordTC(email))\n\n                    }}>Send Instructions</SuperButton></div>\n                <div className={style.text}>Did you remember your password?</div>\n                <div><SuperButton>Try logging in</SuperButton></div>\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport SuperButton from \"../../common/c2-SuperButton/SuperButton\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../bll/store\";\nimport {Navigate} from \"react-router-dom\";\nimport {PATH} from \"../../Header/Header\";\nimport {logoutUserTC} from \"../../bll/reducers/login-reducer\";\nimport style from './profile.module.css'\n\nexport const Profile = () => {\n    const dispatch = useDispatch()\n    const name = useSelector((state: AppRootStateType) => state.login.name)\n    const avatar = useSelector((state: AppRootStateType) => state.login.avatar)\n    const isAuth = useSelector((state: AppRootStateType) => state.login.isAuth)\n    if (!isAuth) {\n        return (\n            <Navigate to={PATH.LOGIN}/>\n        )\n    }\n    return (\n        <div>\n\n            <div className={style.profile}>\n                <h1>{name}</h1>\n                {avatar && <div><img alt={'avatar'} src={avatar}/></div>}\n                <SuperButton onClick={() => {\n                    dispatch(logoutUserTC())\n\n                }}>Logout</SuperButton>\n            </div>\n\n        </div>\n    )\n}","import { initial } from \"./InitialData\"\n\nexport const RegAPI={\n    register(email:string,password:string){\n        return initial.post('/auth/register',{email,password})\n    }\n\n}","import {Dispatch} from \"redux\";\nimport {RegAPI} from \"../../API/RegAPI\";\n\nconst initialState: initialStateType = {\n    error: '',\n    isRegistered: false,\n}\n\ntype initialStateType = {\n    error: string | null\n    isRegistered: boolean\n\n}\n\nexport const registrationReducer = (state: initialStateType = initialState, action: registrationReducersActionsType): initialStateType => {\n    switch (action.type) {\n        case 'registration-reducers/SET-REGISTERED-SUCCESSFULLY': {\n            return {...state, isRegistered: action.successful}\n        }\n        case 'registration-reducers/SET-ERROR': {\n            return {...state, error: action.error}\n        }\n        default:\n            return state\n    }\n}\ntype registrationReducersActionsType = setRegisteredSuccessfullyType | setErrorType\nconst setRegisteredSuccessfully = () => {\n    return {\n        type: \"registration-reducers/SET-REGISTERED-SUCCESSFULLY\",\n        successful: true\n    } as const\n\n}\ntype setRegisteredSuccessfullyType = ReturnType<typeof setRegisteredSuccessfully>\nexport const setRegistrationError = (error: string) => {\n    return {\n        type: 'registration-reducers/SET-ERROR',\n        error\n    } as const\n}\ntype setErrorType = ReturnType<typeof setRegistrationError>\nexport const RegisteredUserTC = (email: string, password: string) => (dispatch: Dispatch) => {\n    RegAPI.register(email, password).then(() => {\n        dispatch(setRegisteredSuccessfully())\n    })\n        .catch(() => {\n            dispatch(setRegistrationError(\"Email or password are invalid. Please, try registration again\"))\n        })\n\n}\n\n","import React, {useState} from \"react\";\nimport style from './Registration.module.css'\nimport SuperInputText from \"../../common/c1-SuperInputText/SuperInputText\";\nimport SuperButton from \"../../common/c2-SuperButton/SuperButton\";\nimport {RegisteredUserTC, setRegistrationError} from \"../../bll/reducers/registration-reducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../bll/store\";\nimport {Navigate} from \"react-router-dom\";\nimport {PATH} from \"../../Header/Header\";\n\nexport const Registration = () => {\n    const dispatch = useDispatch()\n    const error = useSelector((state: AppRootStateType) => state.registration.error)\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const onChangeEmail = (e: React.FormEvent<HTMLInputElement>) => {\n        setEmail(e.currentTarget.value)\n    }\n    const onChangePassword = (e: React.FormEvent<HTMLInputElement>) => {\n        setPassword(e.currentTarget.value)\n\n    }\n    const onChangeConfirmPassword = (e: React.FormEvent<HTMLInputElement>) => {\n        setConfirmPassword(e.currentTarget.value)\n\n    }\n    const fetchData = () => {\n        if (password !== confirmPassword) {\n            dispatch(setRegistrationError('Password confirmation does not match!'))\n        } else {\n            dispatch(RegisteredUserTC(email, password))\n            return (<Navigate to={PATH.LOGIN}/>)\n        }\n    }\n\n    return (\n        <div>\n            <div className={style.registration}>\n                <h1>It-incubator</h1>\n                <h2>Sign Up</h2>\n                <div>\n\n                    <div><SuperInputText value={email}\n                                         type={'email'}\n                                         onChange={onChangeEmail}\n                                         placeholder={'Email'}/></div>\n                    <div><SuperInputText\n                        value={password} onChange={onChangePassword}\n                        type={'password'}\n                        placeholder={'Password'}/></div>\n                    <div><SuperInputText\n                        value={confirmPassword}\n                        type={'password'}\n                        onChange={onChangeConfirmPassword}\n                        placeholder={'Confirm password'}/></div>\n\n\n                </div>\n                <div className={style.error}>{error && error}</div>\n                <div>\n                    <SuperButton>Cancel</SuperButton>\n                    <SuperButton onClick={fetchData}>Register</SuperButton>\n                </div>\n\n            </div>\n        </div>\n    )\n}","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\nimport SuperInputText from '../c1-SuperInputText/SuperInputText'\n\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n}\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\n\n    const onEnterCallback = () => {\n\n        setEditMode(false) // выключить editMode при нажатии Enter\n\n        onEnter && onEnter()\n    }\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\n\n        onBlur && onBlur(e)\n    }\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        setEditMode(true)\n        onDoubleClick && onDoubleClick(e)\n    }\n\n    const spanClassName = `${''} ${className}`\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    )\n}\n\nexport default SuperEditableSpan\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\n    {\n        options,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const mappedOptions: any[] = options ? options.map((f, i) => {\n            return (\n                <option key={i+'-'+f} value={f}>{f}</option>\n\n            )\n        }\n    ) : []; // map options with key\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        onChange && onChange(e)\n        onChangeOption && onChangeOption(e.currentTarget.value)\n        // onChange, onChangeOption\n    }\n\n    return (\n        <select onChange={onChangeCallback} {...restProps}>\n            {mappedOptions}\n        </select>\n    )\n}\n\nexport default SuperSelect\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\n    {\n        type, name,\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange&&onChange(e)\n        onChangeOption&&onChangeOption(e.currentTarget.value)\n\n        // onChange, onChangeOption\n    }\n\n\n    const mappedOptions: any[] = options ? options.map((o, i) => (\n        <label key={name + '-' + i}>\n            <input onChange={onChangeCallback}\n                type={'radio'}\n                   name={name}\n                   checked={o===value}\n                   value={o}\n\n                // name, checked, value, onChange\n            />\n            {o}\n        </label>\n    )) : []\n\n    return (\n        <>\n            {mappedOptions}\n        </>\n    )\n}\n\nexport default SuperRadio\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperRange.module.css'\n\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperRangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeRange?: (value: number) => void\n};\n\nconst SuperRange: React.FC<SuperRangePropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeRange,\n        className,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e) // сохраняем старую функциональность\n\n        onChangeRange && onChangeRange(+e.currentTarget.value)\n    }\n\n    const finalRangeClassName = `${s.range} ${className ? className : ''}`\n\n    // @ts-ignore\n    return (\n        <>\n            <input\n                value={restProps.value}\n                type={'range'}\n                onChange={onChangeCallback}\n                className={finalRangeClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n        </>\n    )\n}\n\nexport default SuperRange\n","import React from 'react'\nimport style from './SuperDoubleRange.module.css'\nimport SuperRange from \"../c7-SuperRange/SuperRange\";\n\n\ntype SuperDoubleRangePropsType = {\n    onChangeRange?: (value: number[]) => void\n    value?: [number, number]\n    // min, max, step, disable, ...\n}\n\nexport const SuperDoubleRange = (props:SuperDoubleRangePropsType) => {\n    // сделать самому, можно подключать библиотеки\n\n    const onChangeMax=(max:number)=>{\n        if(props.onChangeRange&&props.value)\n        if(props.value[0] <= props.value[1] - 5) {\n            props.onChangeRange([props.value[0], max])\n        } else {\n            max >= 5 ? props.onChangeRange([max - 5, max]) : props.onChangeRange([0, max])\n        }\n    }\n    const onChangeMin = (min:number) => {\n        if(props.onChangeRange&&props.value)\n      if(props.value[0]<=props.value[1]-5){\n          props.onChangeRange([min,props.value[1]])\n      }\n      else{\n          min<=95?props.onChangeRange([min,min+5]):props.onChangeRange([min,props.value[1]])\n      }\n    }\n\n    return (\n     <div className={style.wrapper}>\n    <SuperRange  value={props.value&&props.value[0]} onChangeRange={onChangeMin}/>\n    <SuperRange className={style.double} value={props.value&&props.value[1]} onChangeRange={onChangeMax}/>\n     </div>\n    )\n}\n\n\n","import React from \"react\";\nimport SuperInputText from \"../../common/c1-SuperInputText/SuperInputText\";\nimport SuperButton from \"../../common/c2-SuperButton/SuperButton\";\nimport SuperCheckbox from \"../../common/c3-SuperCheckbox/SuperCheckbox\";\nimport SuperEditableSpan from \"../../common/c4-SuperEditableSpan/SuperEditableSpan\";\nimport SuperSelect from \"../../common/c5-SuperSelect/SuperSelect\";\nimport SuperRadio from \"../../common/c6-SuperRadio/SuperRadio\";\nimport SuperRange from \"../../common/c7-SuperRange/SuperRange\";\nimport {SuperDoubleRange} from \"../../common/c8-SuperDoubleRange/SuperDoubleRange\";\nimport style from './test.module.css'\nexport const Test = () => {\n  return(\n      <div className={style.test}>\n        <SuperInputText/>\n          <SuperButton>+</SuperButton>\n          <SuperCheckbox/>\n          <SuperEditableSpan/>\n          <SuperSelect/>\n          <SuperRadio/>\n          <SuperRange/>\n          <SuperDoubleRange/>\n\n\n      </div>\n  )\n}","export default __webpack_public_path__ + \"static/media/Group 281.724b6226.svg\";","import React from \"react\";\nimport style from './CheckEmail.module.css'\nimport img from './Group 281.svg'\n\nexport const CheckEmail = () => {\n    return (\n        <div>\n            <div className={style.checkEmail}>\n                <h1>It-incubator</h1>\n                <img alt={'Email'} src={img}/>\n                <h2>Check Email</h2>\n                <div className={style.text}>We've sent an Email with instructions to example@mail.com</div>\n\n            </div>\n        </div>\n    )\n}","import SuperInputText from \"../../common/c1-SuperInputText/SuperInputText\";\nimport SuperButton from \"../../common/c2-SuperButton/SuperButton\";\nimport style from './NewPassword.module.css'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../bll/store\";\nimport {newPasswordTC} from \"../../bll/reducers/restorePassword-reducer\";\nimport {useState} from \"react\";\nimport {useParams} from \"react-router-dom\";\n\nexport const NewPassword = () => {\n    type useParamsType = {\n        tokenId:string | undefined\n    }\n\n    const dispatch=useDispatch()\n    const newPass=useSelector((state:AppRootStateType)=>state.restorePassword.newPass)\n    const [newPassword,setNewPassword]=useState('')\n    const onChangeNewPassword=(e: React.FormEvent<HTMLInputElement>)=>{\n        setNewPassword(e.currentTarget.value)\n\n    }\n    const {tokenId}:useParamsType = useParams()\n    debugger\n    return (\n        <div>\n            <div className={style.newPassword}>\n                <h1>It-incubator</h1>\n                <h2>Create new password</h2>\n                <div><SuperInputText onChange={onChangeNewPassword} type={'password'} placeholder={'Password'}/></div>\n                <div className={style.text}><span>Create new password and we will send you further instructions to email</span></div>\n                <SuperButton onClick={()=>{\n                    if(tokenId)\n                    dispatch(newPasswordTC(newPassword,tokenId))}}>Create new password</SuperButton>\n            </div>\n        </div>\n    )\n}","import {Navigate, Route, Routes} from \"react-router-dom\";\nimport {PATH} from \"../Header/Header\";\nimport {Error} from \"../pages/Error/Error\";\nimport {Login} from \"../pages/Login/Login\";\nimport {RestorePassword} from \"../pages/RestorePassword/RestorePassword\";\nimport {Profile} from \"../pages/Profile/Profile\";\nimport {Registration} from \"../pages/Registration/Registration\";\nimport {Test} from \"../pages/Test/Test\";\nimport {CheckEmail} from \"../pages/CheckEmail/CheckEmail\";\nimport React from \"react\";\nimport {NewPassword} from \"../pages/NewPassword/NewPassword\";\n\nexport const RouteComponent = () => {\n    return (\n        <div>\n            <Routes>\n                <Route path={'/'} element={<Navigate to={PATH.LOGIN}/>}/>\n                <Route element={<Error/>} path={PATH.ERROR_404}/>\n                <Route element={<Login/>} path={PATH.LOGIN}/>\n                <Route element={<RestorePassword/>} path={PATH.RESTORE_PASSWORD}/>\n                <Route element={<Profile/>} path={PATH.PROFILE}/>\n                <Route element={<Registration/>} path={PATH.REGISTRATION}/>\n                <Route element={<Test/>} path={PATH.TEST}/>\n                <Route element={<CheckEmail/>} path={PATH.CHECK_EMAIL}/>\n                <Route element={<NewPassword/>} path={PATH.NEW_PASSWORD}/>\n                <Route element={<Error/>} path={'*'}/>\n\n\n            </Routes></div>\n    )\n}\n","import React, {useEffect} from 'react';\nimport './App.css';\nimport {Header} from \"./Header/Header\";\n\nimport {RouteComponent} from './RouteComponent/RouteComponent';\nimport {useDispatch} from \"react-redux\";\nimport {authMeTC} from \"./bll/reducers/login-reducer\";\n\nfunction App() {\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(authMeTC())\n\n    }, [dispatch])\n    return (\n        <div className=\"App\">\n            <Header/>\n            <RouteComponent/>\n        </div>\n    );\n}\n\nexport default App;\n","const initialState:any=[]\n\nexport const errorReducer=(state:any=initialState, action:any)=>{\n    switch (action.type){\n        case '':{\n            return state\n        }\n        default: return state\n    }\n}","const initialState:any=[]\n\nexport const profileReducer=(state:any=initialState, action:any)=>{\n    switch (action.type){\n        case '':{\n            return state\n        }\n        default: return state\n    }\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport {errorReducer} from \"./reducers/error-reducer\";\nimport {loginReducer} from \"./reducers/login-reducer\";\nimport {profileReducer} from \"./reducers/profile-reducer\";\nimport {registrationReducer} from \"./reducers/registration-reducer\";\nimport {restorePasswordReducer} from \"./reducers/restorePassword-reducer\";\nimport thunkMiddleware from 'redux-thunk'\n\nconst rootReducer=combineReducers({\n    error:errorReducer,\n    login:loginReducer,\n    profile:profileReducer,\n    registration:registrationReducer,\n    restorePassword:restorePasswordReducer\n})\nexport const store=createStore(rootReducer,applyMiddleware(thunkMiddleware))\nexport type AppRootStateType=ReturnType<typeof rootReducer>\n\n//@ts-ignore\n\nwindow.store = store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./bll/store\";\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <React.StrictMode>\n                <App/>\n            </React.StrictMode>\n        </Provider>\n\n    </HashRouter>\n    ,\n    document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}