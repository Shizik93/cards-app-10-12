{"version":3,"sources":["pages/Registration/Registration.module.css","pages/Login/Login.module.css","pages/RestorePassword/RestorePassword.module.css","pages/CardsPacks/CardsPacks.module.css","Header/Header.module.css","pages/NewPassword/NewPassword.module.css","common/c1-SuperInputText/SuperInputText.module.css","common/c2-SuperButton/SuperButton.module.css","common/c3-SuperCheckbox/SuperCheckbox.module.css","pages/Profile/profile.module.css","common/c8-SuperDoubleRange/SuperDoubleRange.module.css","pages/CheckEmail/CheckEmail.module.css","pages/Preloader/Preloader.module.css","pages/Test/test.module.css","images/Union (Stroke).svg","images/Group 608.svg","Header/Header.tsx","pages/Error/Error.tsx","common/c1-SuperInputText/SuperInputText.tsx","common/c2-SuperButton/SuperButton.tsx","common/c3-SuperCheckbox/SuperCheckbox.tsx","API/InitialData.ts","API/LoginAPI.ts","bll/reducers/app-reducer.ts","bll/reducers/login-reducer.ts","pages/Login/Login.tsx","API/NewPasswordAPI.ts","bll/reducers/restorePassword-reducer.ts","pages/RestorePassword/RestorePassword.tsx","pages/Profile/Profile.tsx","API/RegAPI.ts","bll/reducers/registration-reducer.ts","pages/Registration/Registration.tsx","common/c4-SuperEditableSpan/SuperEditableSpan.tsx","common/c5-SuperSelect/SuperSelect.tsx","common/c6-SuperRadio/SuperRadio.tsx","common/c7-SuperRange/SuperRange.tsx","common/c8-SuperDoubleRange/SuperDoubleRange.tsx","pages/Test/Test.tsx","pages/CheckEmail/Group 281.svg","pages/CheckEmail/CheckEmail.tsx","pages/NewPassword/NewPassword.tsx","pages/CardsPacks/CardsPacks.tsx","RouteComponent/RouteComponent.tsx","pages/Preloader/Preloader.tsx","App.tsx","bll/store.ts","index.tsx"],"names":["module","exports","PATH","Header","useSelector","state","login","isAuth","className","style","main","packsList","to","src","cardImage","profile","profileImage","Error","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","superInput","e","currentTarget","value","key","borderRadius","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","initial","axios","create","baseURL","withCredentials","LoginAPI","email","password","rememberMe","post","delete","initialState","isLoading","setIsLoading","_id","name","avatar","publicCardPacksCount","setLogin","data","logoutUserTC","dispatch","then","res","catch","err","console","dir","finally","setError","Login","useDispatch","useState","setEmail","setPassword","setRememberMe","showPassword","setShowPassword","test","setLoginTC","placeholder","passwordBlock","checkboxEye","defaultChecked","onClick","width","display","justifyContent","superButton","text","NewPasswordAPI","from","message","resetPasswordToken","isRecovery","newPass","emailRecovery","RestorePassword","restorePassword","newPassword","defaultValue","text_1","success","forgotNewPasswordTC","text_2","Profile","editableMode","setEditableMode","userName","setUserName","autoFocus","onBlur","onDoubleClick","alt","button","RegAPI","isRegistered","setRegistrationError","Registration","registration","confirmPassword","setConfirmPassword","showConfirmPassword","setShowConfirmPassword","buttonBox","superButtonReg","successful","RegisteredUserTC","SuperEditableSpan","spanProps","editMode","setEditMode","restSpanProps","SuperSelect","options","onChangeOption","mappedOptions","map","f","i","SuperRadio","onChangeCallback","o","SuperRange","onChangeRange","finalRangeClassName","range","SuperDoubleRange","props","wrapper","min","double","max","Test","CheckEmail","checkEmail","img","NewPassword","setNewPassword","tokenId","useParams","token","CardsPacks","cardsPacksContainer","background","settingsPacks","settingsButtons","color","height","RouteComponent","path","element","Preloader","box","spinner","App","app","useEffect","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57181a0f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"registration\":\"Registration_registration__1xru0\",\"error\":\"Registration_error__3n58D\",\"superButton\":\"Registration_superButton__17HFm\",\"superButtonReg\":\"Registration_superButtonReg__2egIi\",\"passwordBlock\":\"Registration_passwordBlock__33m4h\",\"password\":\"Registration_password__1qtyz\",\"checkboxEye\":\"Registration_checkboxEye__3zZcT\",\"buttonBox\":\"Registration_buttonBox__1mjJ8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__3IC9Q\",\"box\":\"Login_box__FA8qd\",\"text\":\"Login_text__yxCrE\",\"passwordBlock\":\"Login_passwordBlock__pTuJN\",\"checkboxEye\":\"Login_checkboxEye__-8kh6\",\"error\":\"Login_error__yIn7U\",\"password\":\"Login_password__4_z11\",\"checkbox\":\"Login_checkbox__19Bf0\",\"superButton\":\"Login_superButton__36iLT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPassword\":\"RestorePassword_newPassword__3t6ZQ\",\"text_1\":\"RestorePassword_text_1__33SRr\",\"text_2\":\"RestorePassword_text_2__pNmKy\",\"superButton\":\"RestorePassword_superButton__2YT5W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardsPacksContainer\":\"CardsPacks_cardsPacksContainer__xohnE\",\"settingsPacks\":\"CardsPacks_settingsPacks__1iFPE\",\"settingsButtons\":\"CardsPacks_settingsButtons__2ayKS\",\"packsList\":\"CardsPacks_packsList__1bOJa\",\"superInput\":\"CardsPacks_superInput__38AH7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Header_main__ncdu4\",\"packsList\":\"Header_packsList__1701j\",\"profile\":\"Header_profile__2hIBf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPassword\":\"NewPassword_newPassword__5g8OE\",\"text\":\"NewPassword_text__r0oUX\",\"superButton\":\"NewPassword_superButton__1Jry3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__WuyFe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1Oj1f\",\"red\":\"SuperButton_red__17evz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1wekg\",\"spanClassName\":\"SuperCheckbox_spanClassName__309sz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__3xJtU\",\"button\":\"profile_button__2_m6V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"double\":\"SuperDoubleRange_double__j_YjA\",\"wrapper\":\"SuperDoubleRange_wrapper__jJdK4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkEmail\":\"CheckEmail_checkEmail__7WNld\",\"text\":\"CheckEmail_text__2t-dL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Preloader_box__1lO8N\",\"spinner\":\"Preloader_spinner__3gLw2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"test\":\"test_test__3Z_re\"};","export default __webpack_public_path__ + \"static/media/Union (Stroke).b2a04059.svg\";","export default __webpack_public_path__ + \"static/media/Group 608.528a4292.svg\";","import {NavLink} from \"react-router-dom\";\nimport {useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../bll/store\";\nimport style from './Header.module.css'\nimport profileImage from '../images/Union (Stroke).svg'\nimport cardImage from '../images/Group 608.svg'\n\n\nexport const PATH = {\n    ERROR_404: '/error404',\n    LOGIN: '/login',\n    RESTORE_PASSWORD: '/restore-password',\n    PROFILE: '/profile',\n    REGISTRATION: '/registration',\n    TEST: '/test',\n    CHECK_EMAIL: '/check-email',\n    NEW_PASSWORD: '/new-password/:tokenId',\n    CARDS_PACKS:'/cards-packs',\n    CARDS:'/cards',\n\n}\n\nexport const Header = () => {\n    const isAuth = useSelector((state: AppRootStateType) => state.login.isAuth)\n    return (\n        <div className={style.main}>\n            <div className={style.packsList}>\n                <NavLink to={PATH.LOGIN}> <img src={cardImage}/>Cards Packs</NavLink>\n            </div>\n            <div className={style.profile}>\n                <NavLink to={PATH.PROFILE}><img src={profileImage}/>Profile</NavLink>\n            </div>\n        </div>\n    )\n}","import React from \"react\";\n\nexport const Error = () => {\n  return(\n      <div>\n          Error 404\n      </div>\n  )\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className,\n        spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${className} ${s.superInput}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={type}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span style={{borderRadius: '48px'}} className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n        <input\n        type={'checkbox'}\n        onChange={onChangeCallback}\n        className={className?className:finalInputClassName}\n\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n        />\n        {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox\n\n\n/*\n<label>\n<input\ntype={'checkbox'}\nonChange={onChangeCallback}\nclassName={finalInputClassName}\n\n{...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n/>\n{children && <span className={s.spanClassName}>{children}</span>}\n</label> // благодаря label нажатие на спан передастся в инпут\n*/\n","import axios from \"axios\";\n\nexport const initial = axios.create({\n    baseURL: 'https://neko-back.herokuapp.com/2.0',\n    withCredentials: true\n})","import { initial } from \"./InitialData\"\n\nexport const LoginAPI = {\n    setLogin(email: string, password: string, rememberMe: boolean) {\n        return initial.post('auth/login', {email, password, rememberMe})\n    },\n    me() {\n        return initial.post('auth/me')\n\n    },\n    logout() {\n        return initial.delete('auth/me')\n\n    }\n}","const initialState={\n    isLoading:false\n\n}\ntype initialStateType={\n    isLoading:boolean\n}\n\n\nexport const appReducer=(state:initialStateType=initialState,action:setIsLoadingType)=>{\n    switch (action.type){\n        case'app-reducer/SET-IS-LOADING':{\n            return {...state,isLoading:action.value}\n        }\n        default: return state\n    }\n\n}\nexport const setIsLoading=(value:boolean)=>{\n    return {\n        type:'app-reducer/SET-IS-LOADING',\n        value\n    } as const\n}\ntype setIsLoadingType=ReturnType<typeof setIsLoading>","import {Dispatch} from \"redux\";\nimport {LoginAPI} from \"../../API/LoginAPI\";\nimport {setIsLoading} from \"./app-reducer\";\n\nconst initialState: initialStateType = {\n    isAuth: false,\n    _id: null,\n    email: null,\n    name: null,\n    avatar: null,\n    publicCardPacksCount: 0,\n    error: ''\n}\ntype initialStateType = {\n    isAuth: boolean\n    _id: string | null;\n    email: string | null;\n    name: string | null;\n    avatar?: string | null;\n    publicCardPacksCount: number; // количество колод\n    error: string\n}\n\nexport const loginReducer = (state: initialStateType = initialState, action: ReducerType): initialStateType => {\n    switch (action.type) {\n        case 'login-reducer/SET-LOGIN':\n        case \"login-reducer/LOGOUT-USER\": {\n            return {...state, ...action.data}\n        }\n        case 'login-reducer/SET-ERROR': {\n            return {...state, error: action.error}\n        }\n        /*     case 'login-reducer/SET-USER-NAME':{\n                 return {...state,name:action.name}\n             }\n             case 'login-reducer/SET-AVATAR':{\n                 return {...state,avatar:action.avatar}\n             }*/\n\n        default:\n            return state\n    }\n}\ntype ReducerType = setLoginType | logoutUserType | setErrorType/*|setUserNameType|setAvatarType*/\nconst setLogin = (data: initialStateType) => {\n    return {\n        type: 'login-reducer/SET-LOGIN',\n        data\n    } as const\n}\ntype setLoginType = ReturnType<typeof setLogin>\nexport const setLoginTC = (email: string, password: string, rememberMe: boolean) => (dispatch: Dispatch) => {\n    dispatch(setIsLoading(true))\n    LoginAPI.setLogin(email, password, rememberMe).then((res) => {\n        dispatch(setLogin({\n            isAuth: true,\n            _id: res.data._id,\n            email: res.data.email,\n            name: res.data.name,\n            avatar: res.data.avatar ? res.data.avatar : null,\n            publicCardPacksCount: res.data.publicCardPacksCount,\n            error: res.data.error\n        }))\n    }).catch(() => {\n        dispatch(setError('Invalid email or password!'))\n\n    }).finally(() => dispatch(setIsLoading(false)))\n\n}\n\nconst logoutUser = () => {\n    return {\n        type: 'login-reducer/LOGOUT-USER',\n        data: initialState\n    } as const\n}\ntype logoutUserType = ReturnType<typeof logoutUser>\nexport const logoutUserTC = () => (dispatch: Dispatch) => {\n    dispatch(setIsLoading(true))\n    LoginAPI.logout().then((res) => {\n        dispatch(logoutUser())\n    }).catch((err) => {\n        console.dir(err)\n    }).finally(() => dispatch(setIsLoading(false)))\n\n}\nexport const authMeTC = () => (dispatch: Dispatch) => {\n    dispatch(setIsLoading(true))\n    LoginAPI.me().then((res) => {\n        dispatch(setLogin({\n            isAuth: true,\n            _id: res.data._id,\n            email: res.data.email,\n            name: res.data.name,\n            avatar: res.data.avatar ? res.data.avatar : null,\n            publicCardPacksCount: res.data.publicCardPacksCount,\n            error: res.data.error\n        }))\n    }).catch((err) => {\n        console.dir(err)\n    }).finally(() => {\n        dispatch(setIsLoading(false))\n    })\n}\nexport const setError = (error: string) => {\n    return {\n        type: 'login-reducer/SET-ERROR',\n        error\n    } as const\n}\ntype setErrorType = ReturnType<typeof setError>\n/*\n\nexport const setUserName=(name:string)=>{\n    return{\n        type:'login-reducer/SET-USER-NAME',\n        name\n    } as const\n}\ntype setUserNameType=ReturnType<typeof setUserName>\n\nexport const setAvatar=(avatar:any)=>{\n    return{\n        type:'login-reducer/SET-AVATAR',\n        avatar\n    } as const\n}\ntype setAvatarType=ReturnType<typeof setAvatar>*/\n","import React, {useState} from \"react\";\nimport SuperInputText from \"../../common/c1-SuperInputText/SuperInputText\";\nimport SuperButton from \"../../common/c2-SuperButton/SuperButton\";\nimport style from './Login.module.css'\nimport SuperCheckbox from \"../../common/c3-SuperCheckbox/SuperCheckbox\";\nimport {Navigate, NavLink} from \"react-router-dom\";\nimport {PATH} from \"../../Header/Header\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setError, setLoginTC} from \"../../bll/reducers/login-reducer\";\nimport {AppRootStateType} from \"../../bll/store\";\n\n\nexport const Login = () => {\n    const error = useSelector((state: AppRootStateType) => state.login.error)\n    const isAuth = useSelector((state: AppRootStateType) => state.login.isAuth)\n    const dispatch = useDispatch()\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [rememberMe, setRememberMe] = useState(false)\n    const [showPassword, setShowPassword] = useState(false)\n\n\n    const login = () => {\n        if (email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\n            dispatch(setError('Invalid email address'))\n        } else {\n            dispatch(setError(''))\n            dispatch(setLoginTC(email, password, rememberMe))\n\n        }\n    }\n    const onChangeEmail = (e: React.FormEvent<HTMLInputElement>) => {\n        setEmail(e.currentTarget.value)\n\n    }\n    const onChangePassword = (e: React.FormEvent<HTMLInputElement>) => {\n        setPassword(e.currentTarget.value)\n\n    }\n    const onChangeRememberMe = (e: React.FormEvent<HTMLInputElement>) => {\n        setRememberMe(e.currentTarget.checked)\n\n    }\n    const changeShowPassword = (e: React.FormEvent<HTMLInputElement>) => {\n        setShowPassword(e.currentTarget.checked)\n\n    }\n    if (isAuth) {\n        return (<Navigate to={PATH.PROFILE}/>)\n    }\n    return (\n        <div>\n            <div className={style.login}>\n                <h1>It-incubator</h1>\n                <h2>Sign In</h2>\n                <div>\n\n                    <div><SuperInputText\n                        className={style.superInput}\n                        onEnter={login}\n                        value={email}\n                        onChange={onChangeEmail}\n                        type={'email'}\n                        placeholder={'Email'}/>\n                    </div>\n\n\n                    <div className={style.passwordBlock}>\n                        <SuperInputText className={`${style.password}`}\n                                        onEnter={login}\n                                        value={password}\n                                        onChange={onChangePassword}\n                                        type={showPassword ? 'text' : 'password'}\n                                        placeholder={'Password'}/>\n                        <input className={style.checkboxEye}\n                               type={'checkbox'}\n                               defaultChecked={showPassword}\n                               onClick={changeShowPassword}/>\n                    </div>\n                    <div>{error}</div>\n\n\n                    <SuperCheckbox\n                        className={style.checkbox}\n                        defaultChecked={rememberMe}\n                        onChange={onChangeRememberMe}>\n                        Remember me\n                    </SuperCheckbox>\n                </div>\n\n\n                <div style={{width:'347px', display:'flex',justifyContent:'flex-end'}}>\n                    <NavLink  to={PATH.RESTORE_PASSWORD}>Forgot Password</NavLink>\n                </div>\n                <div>\n                    <SuperButton className={style.superButton} onClick={login}>Login</SuperButton></div>\n                <div className={style.text}>Don't have an account?</div>\n                <div>\n                    <NavLink to={PATH.REGISTRATION}>Sign Up</NavLink>\n                </div>\n            </div>\n        </div>\n    )\n}","import {initial} from \"./InitialData\";\ntype AxiosForgotPasswordType = {\n    success: boolean\n}\nexport const NewPasswordAPI = {\n    forgotNewPassword(email: string) {\n        return initial.post<AxiosForgotPasswordType>('/auth/forgot', {\n            email,\n            from: 'AlexKayuda',\n            message: `<div style=\"background-color: lime; padding: 15px\"><a href='https://shizik93.github.io/cards-app-10-12/#/new-password/$token$'>Link</a></div>`\n        }, {})\n    },\n    setNewPassword(password: string,resetPasswordToken:string) {\n        return initial.post('/auth/set-new-password', {\n            password,\n            resetPasswordToken,\n        })\n    }\n}","import {Dispatch} from \"redux\";\nimport {NewPasswordAPI} from \"../../API/NewPasswordAPI\";\nimport {setIsLoading} from \"./app-reducer\";\n\nconst initialState: initialStateType = {\n    isRecovery: false,\n    newPass: false,\n    emailRecovery: '',\n}\ntype initialStateType = {\n    isRecovery: boolean\n    newPass: boolean\n    emailRecovery: string\n}\n\nexport const restorePasswordReducer = (state: initialStateType = initialState, action: restorePasswordReducerActionsType): initialStateType => {\n    switch (action.type) {\n        case 'restorePassword-reducer/EMAIL-RECOVERY': {\n            return {...state, emailRecovery: action.email}\n        }\n        case \"restorePassword-reducer/SET-IS-RECOVERY\": {\n            return {...state, isRecovery: action.success}\n        }\n        case \"restorePassword-reducer/SET-NEW-PASSWORD\": {\n            return {...state, newPass: action.newPass}\n        }\n        default:\n            return state\n    }\n}\ntype restorePasswordReducerActionsType = emailRecoveryType | setIsRecoveryType | setNewPasswordType\n\nconst emailRecovery = (email: string) => {\n    return {\n        type: 'restorePassword-reducer/EMAIL-RECOVERY',\n        email\n    } as const\n\n}\ntype emailRecoveryType = ReturnType<typeof emailRecovery>\nconst setIsRecovery = (success: boolean) => {\n    return {\n        type: 'restorePassword-reducer/SET-IS-RECOVERY',\n        success\n    } as const\n}\ntype setIsRecoveryType = ReturnType<typeof setIsRecovery>\nconst setNewPassword = (newPass: boolean) => {\n    return {\n        type: 'restorePassword-reducer/SET-NEW-PASSWORD',\n        newPass\n    } as const\n}\ntype setNewPasswordType = ReturnType<typeof setNewPassword>\nexport const forgotNewPasswordTC = (email: string) => (dispatch: Dispatch) => {\n    dispatch(setIsLoading(true))\n    NewPasswordAPI.forgotNewPassword(email).then((res) => {\n        dispatch(setIsRecovery(res.data.success))\n        dispatch(emailRecovery(email))\n    }).catch((err) => {\n        console.dir(err)\n    }).finally(() => {\n        dispatch(setIsLoading(false))\n    })\n}\nexport const newPasswordTC = (password: string, token: string) => (dispatch: Dispatch) => {\n    dispatch(setIsLoading(true))\n    NewPasswordAPI.setNewPassword(password, token).then(() => {\n        dispatch(setNewPassword(true))\n\n    }).catch((err) => {\n        console.dir(err)\n    }).finally(() => {\n        dispatch(setIsLoading(false))\n    })\n\n}","import React, {useState} from \"react\";\nimport style from './RestorePassword.module.css'\nimport SuperInputText from \"../../common/c1-SuperInputText/SuperInputText\";\nimport SuperButton from \"../../common/c2-SuperButton/SuperButton\";\nimport {forgotNewPasswordTC} from \"../../bll/reducers/restorePassword-reducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../bll/store\";\nimport {Link, Navigate} from \"react-router-dom\";\nimport {PATH} from \"../../Header/Header\";\n\nexport const RestorePassword = () => {\n    const dispatch = useDispatch()\n    const emailRecovery = useSelector((state: AppRootStateType) => state.restorePassword.emailRecovery)\n    const [email, setEmail] = useState('')\n    const onChangeEmail = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setEmail(e.currentTarget.value)\n    }\n    if (emailRecovery) {\n        return (\n            <Navigate to={PATH.CHECK_EMAIL}/>\n        )\n    }\n    return (\n        <div>\n            <div className={style.newPassword}>\n                <h1>It-incubator</h1>\n                <h2>Forgot your password?</h2>\n                <div><SuperInputText defaultValue={email} onChange={onChangeEmail} placeholder={'Email'}/></div>\n                <div className={style.text_1}>Enter your email address and we will send you further instructions</div>\n                <div><SuperButton\n                    className={style.superButton}\n                    onClick={() => {\n                        dispatch(forgotNewPasswordTC(email))\n\n                    }}>Send Instructions</SuperButton></div>\n                <div className={`${style.text_1} ${style.text_2}`}>Did you remember your password?</div>\n                <div><Link to={PATH.LOGIN}>Try logging in</Link> </div>\n            </div>\n        </div>\n    )\n}","import React, {useState} from \"react\";\nimport SuperButton from \"../../common/c2-SuperButton/SuperButton\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../bll/store\";\nimport {Navigate} from \"react-router-dom\";\nimport {PATH} from \"../../Header/Header\";\nimport {logoutUserTC} from \"../../bll/reducers/login-reducer\";\nimport style from './profile.module.css'\n\nexport const Profile = () => {\n    const dispatch = useDispatch()\n    const [editableMode, setEditableMode] = useState(false)\n    const name = useSelector((state: AppRootStateType) => state.login.name)\n    const [userName, setUserName] = useState(name ? name : '')\n    const avatar = useSelector((state: AppRootStateType) => state.login.avatar)\n    const isAuth = useSelector((state: AppRootStateType) => state.login.isAuth)\n    if (!isAuth) {\n        return (\n            <Navigate to={PATH.LOGIN}/>\n        )\n    }\n    return (\n        <div>\n\n            <div className={style.profile}>\n\n                {editableMode\n                    ?\n                    <input autoFocus={true} onChange={(e) => setUserName(e.currentTarget.value)} placeholder={userName}\n                           onBlur={() => setEditableMode(false)}/>\n                    : <h1 onDoubleClick={() => setEditableMode(true)}>{userName}</h1>}\n                {avatar && <div><img alt={'avatar'} src={avatar}/></div>}\n                <SuperButton className={style.button} onClick={() => {\n                    dispatch(logoutUserTC())\n\n                }}>Logout</SuperButton>\n\n\n            </div>\n\n        </div>\n    )\n}","import { initial } from \"./InitialData\"\n\nexport const RegAPI={\n    register(email:string,password:string){\n        return initial.post('/auth/register',{email,password})\n    }\n\n}","import {Dispatch} from \"redux\";\nimport {RegAPI} from \"../../API/RegAPI\";\nimport {setIsLoading} from \"./app-reducer\";\n\nconst initialState: initialStateType = {\n    error: '',\n    isRegistered: false,\n}\n\ntype initialStateType = {\n    error: string | null\n    isRegistered: boolean\n\n}\n\nexport const registrationReducer = (state: initialStateType = initialState, action: registrationReducersActionsType): initialStateType => {\n    switch (action.type) {\n        case 'registration-reducers/SET-REGISTERED-SUCCESSFULLY': {\n            return {...state, isRegistered: action.successful}\n        }\n        case 'registration-reducers/SET-ERROR': {\n            return {...state, error: action.error}\n        }\n        default:\n            return state\n    }\n}\ntype registrationReducersActionsType = setRegisteredSuccessfullyType | setErrorType\nconst setRegisteredSuccessfully = () => {\n    return {\n        type: \"registration-reducers/SET-REGISTERED-SUCCESSFULLY\",\n        successful: true\n    } as const\n\n}\ntype setRegisteredSuccessfullyType = ReturnType<typeof setRegisteredSuccessfully>\nexport const setRegistrationError = (error: string) => {\n    return {\n        type: 'registration-reducers/SET-ERROR',\n        error\n    } as const\n}\ntype setErrorType = ReturnType<typeof setRegistrationError>\nexport const RegisteredUserTC = (email: string, password: string) => (dispatch: Dispatch) => {\n    dispatch(setIsLoading(true))\n    RegAPI.register(email, password).then(() => {\n        dispatch(setRegisteredSuccessfully())\n    })\n        .catch(() => {\n            dispatch(setRegistrationError(\"Email or password are invalid. Please, try registration again\"))\n        })\n        .finally(() => {\n            dispatch(setIsLoading(false))\n        })\n\n}\n\n","import React, {useState} from \"react\";\nimport style from './Registration.module.css'\nimport SuperInputText from \"../../common/c1-SuperInputText/SuperInputText\";\nimport SuperButton from \"../../common/c2-SuperButton/SuperButton\";\nimport {RegisteredUserTC, setRegistrationError} from \"../../bll/reducers/registration-reducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../bll/store\";\nimport {Link, Navigate} from \"react-router-dom\";\nimport {PATH} from \"../../Header/Header\";\n\nexport const Registration = () => {\n    const dispatch = useDispatch()\n    const error = useSelector((state: AppRootStateType) => state.registration.error)\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [showPassword, setShowPassword] = useState(false)\n    const [showConfirmPassword, setShowConfirmPassword] = useState(false)\n    const onChangeEmail = (e: React.FormEvent<HTMLInputElement>) => {\n        setEmail(e.currentTarget.value)\n    }\n    const onChangePassword = (e: React.FormEvent<HTMLInputElement>) => {\n        setPassword(e.currentTarget.value)\n\n    }\n    const onChangeConfirmPassword = (e: React.FormEvent<HTMLInputElement>) => {\n        setConfirmPassword(e.currentTarget.value)\n\n    }\n    const changeShowPassword = (e: React.FormEvent<HTMLInputElement>) => {\n        setShowPassword(e.currentTarget.checked)\n    }\n    const changeShowConfirmPassword = (e: React.FormEvent<HTMLInputElement>) => {\n        setShowConfirmPassword(e.currentTarget.checked)\n    }\n    const fetchData = () => {\n        if (password !== confirmPassword) {\n            dispatch(setRegistrationError('Password confirmation does not match!'))\n        } else {\n            dispatch(RegisteredUserTC(email, password))\n            return (<Navigate to={PATH.LOGIN}/>)\n        }\n    }\n\n    return (\n        <div>\n            <div className={style.registration}>\n                <h1>It-incubator</h1>\n                <h2>Sign Up</h2>\n                <div>\n\n                    <div><SuperInputText value={email}\n                                         type={'email'}\n                                         onChange={onChangeEmail}\n                                         placeholder={'Email'}/></div>\n                    <div className={style.passwordBlock}>\n\n                        <SuperInputText\n                            className={style.password}\n                            value={password}\n                            onChange={onChangePassword}\n                            type={showPassword ? 'text' : 'password'}\n                            placeholder={'Password'}/>\n                        <input className={style.checkboxEye}\n                               type={'checkbox'}\n                               defaultChecked={showPassword}\n                               onClick={changeShowPassword}/></div>\n                    <div className={style.passwordBlock}>\n                        <SuperInputText\n                            className={style.password}\n                            value={confirmPassword}\n                            type={showConfirmPassword ? 'text' : 'password'}\n                            onChange={onChangeConfirmPassword}\n                            placeholder={'Confirm password'}/>\n                        <input className={style.checkboxEye}\n                               type={'checkbox'}\n                               defaultChecked={showConfirmPassword}\n                               onClick={changeShowConfirmPassword}/></div>\n\n\n                </div>\n                <div className={style.error}>{error && error}</div>\n                <div className={style.buttonBox}>\n                    <SuperButton className={style.superButton}>Cancel</SuperButton>\n                    <SuperButton className={style.superButtonReg} onClick={fetchData}>Register</SuperButton>\n                </div>\n\n            </div>\n        </div>\n    )\n}","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\nimport SuperInputText from '../c1-SuperInputText/SuperInputText'\n\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n}\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\n\n    const onEnterCallback = () => {\n\n        setEditMode(false) // выключить editMode при нажатии Enter\n\n        onEnter && onEnter()\n    }\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\n\n        onBlur && onBlur(e)\n    }\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        setEditMode(true)\n        onDoubleClick && onDoubleClick(e)\n    }\n\n    const spanClassName = `${''} ${className}`\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    )\n}\n\nexport default SuperEditableSpan\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\n    {\n        options,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const mappedOptions: any[] = options ? options.map((f, i) => {\n            return (\n                <option key={i+'-'+f} value={f}>{f}</option>\n\n            )\n        }\n    ) : []; // map options with key\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        onChange && onChange(e)\n        onChangeOption && onChangeOption(e.currentTarget.value)\n        // onChange, onChangeOption\n    }\n\n    return (\n        <select onChange={onChangeCallback} {...restProps}>\n            {mappedOptions}\n        </select>\n    )\n}\n\nexport default SuperSelect\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\n    {\n        type, name,\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange&&onChange(e)\n        onChangeOption&&onChangeOption(e.currentTarget.value)\n\n        // onChange, onChangeOption\n    }\n\n\n    const mappedOptions: any[] = options ? options.map((o, i) => (\n        <label key={name + '-' + i}>\n            <input onChange={onChangeCallback}\n                type={'radio'}\n                   name={name}\n                   checked={o===value}\n                   value={o}\n\n                // name, checked, value, onChange\n            />\n            {o}\n        </label>\n    )) : []\n\n    return (\n        <>\n            {mappedOptions}\n        </>\n    )\n}\n\nexport default SuperRadio\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperRange.module.css'\n\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperRangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeRange?: (value: number) => void\n};\n\nconst SuperRange: React.FC<SuperRangePropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeRange,\n        className,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e) // сохраняем старую функциональность\n\n        onChangeRange && onChangeRange(+e.currentTarget.value)\n    }\n\n    const finalRangeClassName = `${s.range} ${className ? className : ''}`\n\n    // @ts-ignore\n    return (\n        <>\n            <input\n                value={restProps.value}\n                type={'range'}\n                onChange={onChangeCallback}\n                className={finalRangeClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n        </>\n    )\n}\n\nexport default SuperRange\n","import React from 'react'\nimport style from './SuperDoubleRange.module.css'\nimport SuperRange from \"../c7-SuperRange/SuperRange\";\n\n\ntype SuperDoubleRangePropsType = {\n    onChangeRange?: (value: number[]) => void\n    value?: [number, number]\n    // min, max, step, disable, ...\n}\n\nexport const SuperDoubleRange = (props:SuperDoubleRangePropsType) => {\n    // сделать самому, можно подключать библиотеки\n\n    const onChangeMax=(max:number)=>{\n        if(props.onChangeRange&&props.value)\n        if(props.value[0] <= props.value[1] - 5) {\n            props.onChangeRange([props.value[0], max])\n        } else {\n            max >= 5 ? props.onChangeRange([max - 5, max]) : props.onChangeRange([0, max])\n        }\n    }\n    const onChangeMin = (min:number) => {\n        if(props.onChangeRange&&props.value)\n      if(props.value[0]<=props.value[1]-5){\n          props.onChangeRange([min,props.value[1]])\n      }\n      else{\n          min<=95?props.onChangeRange([min,min+5]):props.onChangeRange([min,props.value[1]])\n      }\n    }\n\n    return (\n     <div className={style.wrapper}>\n    <SuperRange  value={props.value&&props.value[0]} onChangeRange={onChangeMin}/>\n    <SuperRange className={style.double} value={props.value&&props.value[1]} onChangeRange={onChangeMax}/>\n     </div>\n    )\n}\n\n\n","import React from \"react\";\nimport SuperInputText from \"../../common/c1-SuperInputText/SuperInputText\";\nimport SuperButton from \"../../common/c2-SuperButton/SuperButton\";\nimport SuperCheckbox from \"../../common/c3-SuperCheckbox/SuperCheckbox\";\nimport SuperEditableSpan from \"../../common/c4-SuperEditableSpan/SuperEditableSpan\";\nimport SuperSelect from \"../../common/c5-SuperSelect/SuperSelect\";\nimport SuperRadio from \"../../common/c6-SuperRadio/SuperRadio\";\nimport SuperRange from \"../../common/c7-SuperRange/SuperRange\";\nimport {SuperDoubleRange} from \"../../common/c8-SuperDoubleRange/SuperDoubleRange\";\nimport style from './test.module.css'\nexport const Test = () => {\n  return(\n      <div className={style.test}>\n        <SuperInputText/>\n          <SuperButton>+</SuperButton>\n          <SuperCheckbox/>\n          <SuperEditableSpan/>\n          <SuperSelect/>\n          <SuperRadio/>\n          <SuperRange/>\n          <SuperDoubleRange/>\n\n\n      </div>\n  )\n}","export default __webpack_public_path__ + \"static/media/Group 281.724b6226.svg\";","import React from \"react\";\nimport style from './CheckEmail.module.css'\nimport img from './Group 281.svg'\n\nexport const CheckEmail = () => {\n    return (\n        <div>\n            <div className={style.checkEmail}>\n                <h1>It-incubator</h1>\n                <img alt={'Email'} src={img}/>\n                <h2>Check Email</h2>\n                <div className={style.text}>We've sent an Email with instructions to example@mail.com</div>\n\n            </div>\n        </div>\n    )\n}","import SuperInputText from \"../../common/c1-SuperInputText/SuperInputText\";\nimport SuperButton from \"../../common/c2-SuperButton/SuperButton\";\nimport style from './NewPassword.module.css'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../bll/store\";\nimport {newPasswordTC} from \"../../bll/reducers/restorePassword-reducer\";\nimport {useState} from \"react\";\nimport {useParams} from \"react-router-dom\";\n\nexport const NewPassword = () => {\n\n\n    const dispatch = useDispatch()\n    const newPass = useSelector((state: AppRootStateType) => state.restorePassword.newPass)\n    const [newPassword, setNewPassword] = useState('')\n    const onChangeNewPassword = (e: React.FormEvent<HTMLInputElement>) => {\n        setNewPassword(e.currentTarget.value)\n\n    }\n    const {tokenId} = useParams()\n    return (\n        <div>\n            <div className={style.newPassword}>\n                <h1>It-incubator</h1>\n                <h2>Create new password</h2>\n                <div><SuperInputText defaultValue={newPassword} onChange={onChangeNewPassword} type={'password'} placeholder={'Password'}/></div>\n                <div className={style.text}>\n                    <span>Create new password and we will send you further instructions to email</span></div>\n                <SuperButton\n                    className={style.superButton}\n                    onClick={() => {\n                    if (tokenId)\n                        dispatch(newPasswordTC(newPassword, tokenId))\n                }}>Create new password</SuperButton>\n            </div>\n        </div>\n    )\n}","import {useEffect} from \"react\";\nimport {CardsPacksAPI} from \"../../API/CardsPacksAPI\";\nimport style from './CardsPacks.module.css'\nimport SuperButton from \"../../common/c2-SuperButton/SuperButton\";\nimport {SuperDoubleRange} from \"../../common/c8-SuperDoubleRange/SuperDoubleRange\";\nimport SuperInputText from \"../../common/c1-SuperInputText/SuperInputText\";\nimport SuperRadio from \"../../common/c6-SuperRadio/SuperRadio\";\n\nexport const CardsPacks = () => {\n    /*    useEffect(()=>{\n            CardsPacksAPI.getCardsPacks().then((res)=>console.dir(res))\n        },[])*/\n    return (\n        <div>\n            <div className={style.cardsPacksContainer}>\n                <div style={{width: '243', background: '#ECECF9', borderRadius: '8px 0 0 8px'}}>\n                    <div className={style.settingsPacks}>\n                        <div><span>Show packs cards</span></div>\n                        <div className={style.settingsButtons}>\n                            <SuperButton style={{background: '#FFFFFF', color: 'black'}}>My</SuperButton>\n                            <SuperButton>All</SuperButton>\n                        </div>\n                        <div>\n                            <span>Number of cards</span>\n                        </div>\n                        <div>\n                            <SuperDoubleRange/>\n                        </div>\n                    </div>\n                </div>\n                <div style={{width:'765px',display:'flex',justifyContent:'center'}}>\n                    <div className={style.packsList}>\n                        <div>\n                            <h2>Packs List</h2>\n                        </div>\n                        <div style={ {width:'100%', display:\"flex\",justifyContent:'space-around'}}>\n                            <SuperInputText placeholder={'Search...'} className={style.superInput}/>\n                            <SuperButton style={{width: '184px', height: '36px'}}>Add new pack</SuperButton>\n                        </div>\n                        <div>\n\n                        </div>\n                        <div>\n                            <span>1</span>\n                            <span>2</span>\n                            <span>3</span>\n                            <span>Show</span>\n                            <SuperRadio/>\n                            <span>Cards per Page</span>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    )\n}","import {Navigate, Route, Routes} from \"react-router-dom\";\nimport {PATH} from \"../Header/Header\";\nimport {Error} from \"../pages/Error/Error\";\nimport {Login} from \"../pages/Login/Login\";\nimport {RestorePassword} from \"../pages/RestorePassword/RestorePassword\";\nimport {Profile} from \"../pages/Profile/Profile\";\nimport {Registration} from \"../pages/Registration/Registration\";\nimport {Test} from \"../pages/Test/Test\";\nimport {CheckEmail} from \"../pages/CheckEmail/CheckEmail\";\nimport React from \"react\";\nimport {NewPassword} from \"../pages/NewPassword/NewPassword\";\nimport {CardsPacks} from \"../pages/CardsPacks/CardsPacks\";\n\nexport const RouteComponent = () => {\n    return (\n        <div>\n            <Routes>\n                <Route path={'/'} element={<Navigate to={PATH.LOGIN}/>}/>\n                <Route element={<Error/>} path={PATH.ERROR_404}/>\n                <Route element={<Login/>} path={PATH.LOGIN}/>\n                <Route element={<RestorePassword/>} path={PATH.RESTORE_PASSWORD}/>\n                <Route element={<Profile/>} path={PATH.PROFILE}/>\n                <Route element={<Registration/>} path={PATH.REGISTRATION}/>\n                <Route element={<Test/>} path={PATH.TEST}/>\n                <Route element={<CheckEmail/>} path={PATH.CHECK_EMAIL}/>\n                <Route element={<NewPassword/>} path={PATH.NEW_PASSWORD}/>\n                <Route element={<CardsPacks/>} path={PATH.CARDS_PACKS}/>\n                <Route element={<Error/>} path={'*'}/>\n\n\n            </Routes></div>\n    )\n}\n","import React from \"react\";\nimport style from './Preloader.module.css'\n\nexport const Preloader=()=>{\n    return(\n        <div className={style.box}>\n            <span className={style.spinner}></span>\n        </div>\n    )\n}","import React, {useEffect} from 'react';\nimport './App.css';\nimport {Header} from \"./Header/Header\";\n\nimport {RouteComponent} from './RouteComponent/RouteComponent';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {authMeTC} from \"./bll/reducers/login-reducer\";\nimport {AppRootStateType} from \"./bll/store\";\nimport {Preloader} from \"./pages/Preloader/Preloader\";\n\nfunction App() {\n    const isLoading = useSelector((state: AppRootStateType) => state.app.isLoading)\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(authMeTC())\n\n    }, [dispatch])\n\n    return (<div>\n            {isLoading && <Preloader/>}\n            <div className=\"App\">\n                <Header/>\n                <RouteComponent/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport {loginReducer} from \"./reducers/login-reducer\";\nimport {registrationReducer} from \"./reducers/registration-reducer\";\nimport {restorePasswordReducer} from \"./reducers/restorePassword-reducer\";\nimport thunkMiddleware from 'redux-thunk'\nimport {appReducer} from \"./reducers/app-reducer\";\n\nconst rootReducer=combineReducers({\n    app:appReducer,\n    login:loginReducer,\n    registration:registrationReducer,\n    restorePassword:restorePasswordReducer\n})\nexport const store=createStore(rootReducer,applyMiddleware(thunkMiddleware))\nexport type AppRootStateType=ReturnType<typeof rootReducer>\n\n//@ts-ignore\n\nwindow.store = store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./bll/store\";\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <React.StrictMode>\n                <App/>\n            </React.StrictMode>\n        </Provider>\n\n    </HashRouter>\n    ,\n    document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}