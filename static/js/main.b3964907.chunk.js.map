{"version":3,"sources":["pages/Registration/Registration.module.css","pages/Login/Login.module.css","pages/RestorePassword/RestorePassword.module.css","pages/NewPassword/NewPassword.module.css","common/c2-SuperButton/SuperButton.module.css","common/c1-SuperInputText/SuperInputText.module.css","common/c3-SuperCheckbox/SuperCheckbox.module.css","pages/Profile/profile.module.css","common/c8-SuperDoubleRange/SuperDoubleRange.module.css","pages/CheckEmail/CheckEmail.module.css","pages/Preloader/Preloader.module.css","pages/Test/test.module.css","common/c2-SuperButton/SuperButton.tsx","Header/Header.tsx","pages/Error/Error.tsx","common/c1-SuperInputText/SuperInputText.tsx","common/c3-SuperCheckbox/SuperCheckbox.tsx","API/InitialData.ts","API/LoginAPI.ts","bll/reducers/app-reducer.ts","bll/reducers/login-reducer.ts","pages/Login/Login.tsx","API/NewPasswordAPI.ts","bll/reducers/restorePassword-reducer.ts","pages/RestorePassword/RestorePassword.tsx","pages/Profile/Profile.tsx","API/RegAPI.ts","bll/reducers/registration-reducer.ts","pages/Registration/Registration.tsx","common/c4-SuperEditableSpan/SuperEditableSpan.tsx","common/c5-SuperSelect/SuperSelect.tsx","common/c6-SuperRadio/SuperRadio.tsx","common/c7-SuperRange/SuperRange.tsx","common/c8-SuperDoubleRange/SuperDoubleRange.tsx","pages/Test/Test.tsx","pages/CheckEmail/Group 281.svg","pages/CheckEmail/CheckEmail.tsx","pages/NewPassword/NewPassword.tsx","RouteComponent/RouteComponent.tsx","pages/Preloader/Preloader.tsx","App.tsx","bll/reducers/error-reducer.ts","bll/store.ts","index.tsx"],"names":["module","exports","SuperButton","red","className","restProps","finalClassName","s","default","PATH","Header","isAuth","useSelector","state","login","to","Error","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","superInput","e","currentTarget","value","key","style","borderRadius","SuperCheckbox","onChangeChecked","children","checkbox","checked","initial","axios","create","baseURL","withCredentials","LoginAPI","email","password","rememberMe","post","delete","initialState","isLoading","setIsLoading","_id","name","avatar","publicCardPacksCount","setLogin","data","logoutUserTC","dispatch","then","res","catch","err","console","dir","finally","setError","Login","useDispatch","useState","setEmail","setPassword","setRememberMe","showPassword","setShowPassword","test","setLoginTC","placeholder","passwordBlock","checkboxEye","defaultChecked","onClick","superButton","NewPasswordAPI","from","message","resetPasswordToken","isRecovery","newPass","emailRecovery","RestorePassword","restorePassword","newPassword","defaultValue","text_1","success","forgotNewPasswordTC","text_2","Profile","editableMode","setEditableMode","userName","setUserName","profile","autoFocus","onBlur","onDoubleClick","alt","src","button","RegAPI","isRegistered","setRegistrationError","Registration","registration","confirmPassword","setConfirmPassword","showConfirmPassword","setShowConfirmPassword","buttonBox","superButtonReg","successful","RegisteredUserTC","SuperEditableSpan","spanProps","editMode","setEditMode","restSpanProps","SuperSelect","options","onChangeOption","mappedOptions","map","f","i","SuperRadio","onChangeCallback","o","SuperRange","onChangeRange","finalRangeClassName","range","SuperDoubleRange","props","wrapper","min","double","max","Test","CheckEmail","checkEmail","img","text","NewPassword","setNewPassword","tokenId","useParams","token","RouteComponent","path","element","Preloader","box","spinner","App","app","useEffect","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3964907.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"registration\":\"Registration_registration__1xru0\",\"error\":\"Registration_error__3n58D\",\"superButton\":\"Registration_superButton__17HFm\",\"superButtonReg\":\"Registration_superButtonReg__2egIi\",\"passwordBlock\":\"Registration_passwordBlock__33m4h\",\"password\":\"Registration_password__1qtyz\",\"checkboxEye\":\"Registration_checkboxEye__3zZcT\",\"buttonBox\":\"Registration_buttonBox__1mjJ8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__3IC9Q\",\"box\":\"Login_box__FA8qd\",\"text\":\"Login_text__yxCrE\",\"passwordBlock\":\"Login_passwordBlock__pTuJN\",\"checkboxEye\":\"Login_checkboxEye__-8kh6\",\"error\":\"Login_error__yIn7U\",\"password\":\"Login_password__4_z11\",\"checkbox\":\"Login_checkbox__19Bf0\",\"superButton\":\"Login_superButton__36iLT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPassword\":\"RestorePassword_newPassword__3t6ZQ\",\"text_1\":\"RestorePassword_text_1__33SRr\",\"text_2\":\"RestorePassword_text_2__pNmKy\",\"superButton\":\"RestorePassword_superButton__2YT5W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPassword\":\"NewPassword_newPassword__5g8OE\",\"text\":\"NewPassword_text__r0oUX\",\"superButton\":\"NewPassword_superButton__1Jry3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1Oj1f\",\"red\":\"SuperButton_red__17evz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__WuyFe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1wekg\",\"spanClassName\":\"SuperCheckbox_spanClassName__309sz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__3xJtU\",\"button\":\"profile_button__2_m6V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"double\":\"SuperDoubleRange_double__j_YjA\",\"wrapper\":\"SuperDoubleRange_wrapper__jJdK4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkEmail\":\"CheckEmail_checkEmail__7WNld\",\"text\":\"CheckEmail_text__2t-dL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Preloader_box__1lO8N\",\"spinner\":\"Preloader_spinner__3gLw2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"test\":\"test_test__3Z_re\"};","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import {NavLink} from \"react-router-dom\";\nimport SuperButton from \"../common/c2-SuperButton/SuperButton\";\nimport {useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../bll/store\";\n\n\nexport const PATH = {\n    ERROR_404: '/error404',\n    LOGIN: '/login',\n    RESTORE_PASSWORD: '/restore-password',\n    PROFILE: '/profile',\n    REGISTRATION: '/registration',\n    TEST: '/test',\n    CHECK_EMAIL: '/check-email',\n    NEW_PASSWORD:'/new-password/:tokenId',\n\n}\n\nexport const Header = () => {\n    const isAuth = useSelector((state: AppRootStateType) => state.login.isAuth)\n    return (\n        <div>\n            {!isAuth && <SuperButton><NavLink to={PATH.LOGIN}>Login </NavLink></SuperButton>}\n            {isAuth && <SuperButton><NavLink to={PATH.PROFILE}>Profile </NavLink></SuperButton>}\n        </div>\n    )\n}","import React from \"react\";\n\nexport const Error = () => {\n  return(\n      <div>\n          Error 404\n      </div>\n  )\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className,\n        spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${className} ${s.superInput}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={type}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span style={{borderRadius: '48px'}} className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n        <input\n        type={'checkbox'}\n        onChange={onChangeCallback}\n        className={className?className:finalInputClassName}\n\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n        />\n        {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox\n\n\n/*\n<label>\n<input\ntype={'checkbox'}\nonChange={onChangeCallback}\nclassName={finalInputClassName}\n\n{...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n/>\n{children && <span className={s.spanClassName}>{children}</span>}\n</label> // благодаря label нажатие на спан передастся в инпут\n*/\n","import axios from \"axios\";\n\nexport const initial = axios.create({\n    baseURL: 'https://neko-back.herokuapp.com/2.0',\n    withCredentials: true\n})","import { initial } from \"./InitialData\"\n\nexport const LoginAPI = {\n    setLogin(email: string, password: string, rememberMe: boolean) {\n        return initial.post('auth/login', {email, password, rememberMe})\n    },\n    me() {\n        return initial.post('auth/me')\n\n    },\n    logout() {\n        return initial.delete('auth/me')\n\n    }\n}","const initialState={\n    isLoading:false\n\n}\ntype initialStateType={\n    isLoading:boolean\n}\n\n\nexport const appReducer=(state:initialStateType=initialState,action:setIsLoadingType)=>{\n    switch (action.type){\n        case'app-reducer/SET-IS-LOADING':{\n            return {...state,isLoading:action.value}\n        }\n        default: return state\n    }\n\n}\nexport const setIsLoading=(value:boolean)=>{\n    return {\n        type:'app-reducer/SET-IS-LOADING',\n        value\n    } as const\n}\ntype setIsLoadingType=ReturnType<typeof setIsLoading>","import {Dispatch} from \"redux\";\nimport {LoginAPI} from \"../../API/LoginAPI\";\nimport {setIsLoading} from \"./app-reducer\";\n\nconst initialState: initialStateType = {\n    isAuth: false,\n    _id: null,\n    email: null,\n    name: null,\n    avatar: null,\n    publicCardPacksCount: 0,\n    error: ''\n}\ntype initialStateType = {\n    isAuth: boolean\n    _id: string | null;\n    email: string | null;\n    name: string | null;\n    avatar?: string | null;\n    publicCardPacksCount: number; // количество колод\n    error: string\n}\n\nexport const loginReducer = (state: initialStateType = initialState, action: ReducerType): initialStateType => {\n    switch (action.type) {\n        case 'login-reducer/SET-LOGIN':\n        case \"login-reducer/LOGOUT-USER\": {\n            return {...state, ...action.data}\n        }\n        case 'login-reducer/SET-ERROR': {\n            return {...state, error: action.error}\n        }\n        /*     case 'login-reducer/SET-USER-NAME':{\n                 return {...state,name:action.name}\n             }\n             case 'login-reducer/SET-AVATAR':{\n                 return {...state,avatar:action.avatar}\n             }*/\n\n        default:\n            return state\n    }\n}\ntype ReducerType = setLoginType | logoutUserType | setErrorType/*|setUserNameType|setAvatarType*/\nconst setLogin = (data: initialStateType) => {\n    return {\n        type: 'login-reducer/SET-LOGIN',\n        data\n    } as const\n}\ntype setLoginType = ReturnType<typeof setLogin>\nexport const setLoginTC = (email: string, password: string, rememberMe: boolean) => (dispatch: Dispatch) => {\n    dispatch(setIsLoading(true))\n    LoginAPI.setLogin(email, password, rememberMe).then((res) => {\n        dispatch(setLogin({\n            isAuth: true,\n            _id: res.data._id,\n            email: res.data.email,\n            name: res.data.name,\n            avatar: res.data.avatar ? res.data.avatar : null,\n            publicCardPacksCount: res.data.publicCardPacksCount,\n            error: res.data.error\n        }))\n    }).catch(() => {\n        dispatch(setError('Invalid email or password!'))\n\n    }).finally(() => dispatch(setIsLoading(false)))\n\n}\n\nconst logoutUser = () => {\n    return {\n        type: 'login-reducer/LOGOUT-USER',\n        data: initialState\n    } as const\n}\ntype logoutUserType = ReturnType<typeof logoutUser>\nexport const logoutUserTC = () => (dispatch: Dispatch) => {\n    dispatch(setIsLoading(true))\n    LoginAPI.logout().then((res) => {\n        dispatch(logoutUser())\n    }).catch((err) => {\n        console.dir(err)\n    }).finally(() => dispatch(setIsLoading(false)))\n\n}\nexport const authMeTC = () => (dispatch: Dispatch) => {\n    dispatch(setIsLoading(true))\n    LoginAPI.me().then((res) => {\n        dispatch(setLogin({\n            isAuth: true,\n            _id: res.data._id,\n            email: res.data.email,\n            name: res.data.name,\n            avatar: res.data.avatar ? res.data.avatar : null,\n            publicCardPacksCount: res.data.publicCardPacksCount,\n            error: res.data.error\n        }))\n    }).catch((err) => {\n        console.dir(err)\n    }).finally(() => {\n        dispatch(setIsLoading(false))\n    })\n}\nexport const setError = (error: string) => {\n    return {\n        type: 'login-reducer/SET-ERROR',\n        error\n    } as const\n}\ntype setErrorType = ReturnType<typeof setError>\n/*\n\nexport const setUserName=(name:string)=>{\n    return{\n        type:'login-reducer/SET-USER-NAME',\n        name\n    } as const\n}\ntype setUserNameType=ReturnType<typeof setUserName>\n\nexport const setAvatar=(avatar:any)=>{\n    return{\n        type:'login-reducer/SET-AVATAR',\n        avatar\n    } as const\n}\ntype setAvatarType=ReturnType<typeof setAvatar>*/\n","import React, {useState} from \"react\";\nimport SuperInputText from \"../../common/c1-SuperInputText/SuperInputText\";\nimport SuperButton from \"../../common/c2-SuperButton/SuperButton\";\nimport style from './Login.module.css'\nimport SuperCheckbox from \"../../common/c3-SuperCheckbox/SuperCheckbox\";\nimport {Navigate, NavLink} from \"react-router-dom\";\nimport {PATH} from \"../../Header/Header\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setError, setLoginTC} from \"../../bll/reducers/login-reducer\";\nimport {AppRootStateType} from \"../../bll/store\";\n\n\nexport const Login = () => {\n    const error = useSelector((state: AppRootStateType) => state.login.error)\n    const isAuth = useSelector((state: AppRootStateType) => state.login.isAuth)\n    const dispatch = useDispatch()\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [rememberMe, setRememberMe] = useState(false)\n    const [showPassword, setShowPassword] = useState(false)\n\n\n    const login = () => {\n        if (email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\n            dispatch(setError('Invalid email address'))\n        } else {\n            dispatch(setError(''))\n            dispatch(setLoginTC(email, password, rememberMe))\n\n        }\n    }\n    const onChangeEmail = (e: React.FormEvent<HTMLInputElement>) => {\n        setEmail(e.currentTarget.value)\n\n    }\n    const onChangePassword = (e: React.FormEvent<HTMLInputElement>) => {\n        setPassword(e.currentTarget.value)\n\n    }\n    const onChangeRememberMe = (e: React.FormEvent<HTMLInputElement>) => {\n        setRememberMe(e.currentTarget.checked)\n\n    }\n    const changeShowPassword = (e: React.FormEvent<HTMLInputElement>) => {\n        setShowPassword(e.currentTarget.checked)\n\n    }\n    if (isAuth) {\n        return (<Navigate to={PATH.PROFILE}/>)\n    }\n    return (\n        <div>\n            <div className={style.login}>\n                <h1>It-incubator</h1>\n                <h2>Sign In</h2>\n                <div>\n\n                    <div><SuperInputText\n                        className={style.superInput}\n                        onEnter={login}\n                        value={email}\n                        onChange={onChangeEmail}\n                        type={'email'}\n                        placeholder={'Email'}/>\n                    </div>\n\n\n                    <div className={style.passwordBlock}>\n                        <SuperInputText className={`${style.password}`}\n                                        onEnter={login}\n                                        value={password}\n                                        onChange={onChangePassword}\n                                        type={showPassword ? 'text' : 'password'}\n                                        placeholder={'Password'}/>\n                        <input className={style.checkboxEye}\n                               type={'checkbox'}\n                               defaultChecked={showPassword}\n                               onClick={changeShowPassword}/>\n                    </div>\n                    <div>{error}</div>\n\n\n                    <SuperCheckbox\n                        className={style.checkbox}\n                        defaultChecked={rememberMe}\n                        onChange={onChangeRememberMe}>\n                        Remember me\n                    </SuperCheckbox>\n                </div>\n\n\n                <div>\n                    <NavLink to={PATH.RESTORE_PASSWORD}>Forgot Password</NavLink>\n                </div>\n                <div>\n                    <SuperButton className={style.superButton} onClick={login}>Login</SuperButton></div>\n                <div>Don't have an account?</div>\n                <div>\n                    <NavLink to={PATH.REGISTRATION}>Sign Up</NavLink>\n                </div>\n            </div>\n        </div>\n    )\n}","import {initial} from \"./InitialData\";\ntype AxiosForgotPasswordType = {\n    success: boolean\n}\nexport const NewPasswordAPI = {\n    forgotNewPassword(email: string) {\n        return initial.post<AxiosForgotPasswordType>('/auth/forgot', {\n            email,\n            from: 'AlexKayuda',\n            message: `<div style=\"background-color: lime; padding: 15px\"><a href='https://shizik93.github.io/cards-app-10-12/#/new-password/$token$'>Link</a></div>`\n        }, {})\n    },\n    setNewPassword(password: string,resetPasswordToken:string) {\n        return initial.post('/auth/set-new-password', {\n            password,\n            resetPasswordToken,\n        })\n    }\n}","import {Dispatch} from \"redux\";\nimport {NewPasswordAPI} from \"../../API/NewPasswordAPI\";\nimport {setIsLoading} from \"./app-reducer\";\n\nconst initialState: initialStateType = {\n    isRecovery: false,\n    newPass: false,\n    emailRecovery: '',\n}\ntype initialStateType = {\n    isRecovery: boolean\n    newPass: boolean\n    emailRecovery: string\n}\n\nexport const restorePasswordReducer = (state: initialStateType = initialState, action: restorePasswordReducerActionsType): initialStateType => {\n    switch (action.type) {\n        case 'restorePassword-reducer/EMAIL-RECOVERY': {\n            return {...state, emailRecovery: action.email}\n        }\n        case \"restorePassword-reducer/SET-IS-RECOVERY\": {\n            return {...state, isRecovery: action.success}\n        }\n        case \"restorePassword-reducer/SET-NEW-PASSWORD\": {\n            return {...state, newPass: action.newPass}\n        }\n        default:\n            return state\n    }\n}\ntype restorePasswordReducerActionsType = emailRecoveryType | setIsRecoveryType | setNewPasswordType\n\nconst emailRecovery = (email: string) => {\n    return {\n        type: 'restorePassword-reducer/EMAIL-RECOVERY',\n        email\n    } as const\n\n}\ntype emailRecoveryType = ReturnType<typeof emailRecovery>\nconst setIsRecovery = (success: boolean) => {\n    return {\n        type: 'restorePassword-reducer/SET-IS-RECOVERY',\n        success\n    } as const\n}\ntype setIsRecoveryType = ReturnType<typeof setIsRecovery>\nconst setNewPassword = (newPass: boolean) => {\n    return {\n        type: 'restorePassword-reducer/SET-NEW-PASSWORD',\n        newPass\n    } as const\n}\ntype setNewPasswordType = ReturnType<typeof setNewPassword>\nexport const forgotNewPasswordTC = (email: string) => (dispatch: Dispatch) => {\n    dispatch(setIsLoading(true))\n    NewPasswordAPI.forgotNewPassword(email).then((res) => {\n        dispatch(setIsRecovery(res.data.success))\n        dispatch(emailRecovery(email))\n    }).catch((err) => {\n        console.dir(err)\n    }).finally(() => {\n        dispatch(setIsLoading(false))\n    })\n}\nexport const newPasswordTC = (password: string, token: string) => (dispatch: Dispatch) => {\n    dispatch(setIsLoading(true))\n    NewPasswordAPI.setNewPassword(password, token).then(() => {\n        dispatch(setNewPassword(true))\n\n    }).catch((err) => {\n        console.dir(err)\n    }).finally(() => {\n        dispatch(setIsLoading(false))\n    })\n\n}","import React, {useState} from \"react\";\nimport style from './RestorePassword.module.css'\nimport SuperInputText from \"../../common/c1-SuperInputText/SuperInputText\";\nimport SuperButton from \"../../common/c2-SuperButton/SuperButton\";\nimport {forgotNewPasswordTC} from \"../../bll/reducers/restorePassword-reducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../bll/store\";\nimport {Link, Navigate} from \"react-router-dom\";\nimport {PATH} from \"../../Header/Header\";\n\nexport const RestorePassword = () => {\n    const dispatch = useDispatch()\n    const emailRecovery = useSelector((state: AppRootStateType) => state.restorePassword.emailRecovery)\n    const [email, setEmail] = useState('')\n    const onChangeEmail = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setEmail(e.currentTarget.value)\n    }\n    if (emailRecovery) {\n        return (\n            <Navigate to={PATH.CHECK_EMAIL}/>\n        )\n    }\n    return (\n        <div>\n            <div className={style.newPassword}>\n                <h1>It-incubator</h1>\n                <h2>Forgot your password?</h2>\n                <div><SuperInputText defaultValue={email} onChange={onChangeEmail} placeholder={'Email'}/></div>\n                <div className={style.text_1}>Enter your email address and we will send you further instructions</div>\n                <div><SuperButton\n                    className={style.superButton}\n                    onClick={() => {\n                        dispatch(forgotNewPasswordTC(email))\n\n                    }}>Send Instructions</SuperButton></div>\n                <div className={style.text_2}>Did you remember your password?</div>\n                <div><Link to={PATH.LOGIN}>Try logging in</Link> </div>\n            </div>\n        </div>\n    )\n}","import React, {useState} from \"react\";\nimport SuperButton from \"../../common/c2-SuperButton/SuperButton\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../bll/store\";\nimport {Navigate} from \"react-router-dom\";\nimport {PATH} from \"../../Header/Header\";\nimport {logoutUserTC} from \"../../bll/reducers/login-reducer\";\nimport style from './profile.module.css'\n\nexport const Profile = () => {\n    const dispatch = useDispatch()\n    const [editableMode, setEditableMode] = useState(false)\n    const name = useSelector((state: AppRootStateType) => state.login.name)\n    const [userName, setUserName] = useState(name ? name : '')\n    const avatar = useSelector((state: AppRootStateType) => state.login.avatar)\n    const isAuth = useSelector((state: AppRootStateType) => state.login.isAuth)\n    if (!isAuth) {\n        return (\n            <Navigate to={PATH.LOGIN}/>\n        )\n    }\n    return (\n        <div>\n\n            <div className={style.profile}>\n\n                {editableMode\n                    ?\n                    <input autoFocus={true} onChange={(e) => setUserName(e.currentTarget.value)} placeholder={userName}\n                           onBlur={() => setEditableMode(false)}/>\n                    : <h1 onDoubleClick={() => setEditableMode(true)}>{userName}</h1>}\n                {avatar && <div><img alt={'avatar'} src={avatar}/></div>}\n                <SuperButton className={style.button} onClick={() => {\n                    dispatch(logoutUserTC())\n\n                }}>Logout</SuperButton>\n\n\n            </div>\n\n        </div>\n    )\n}","import { initial } from \"./InitialData\"\n\nexport const RegAPI={\n    register(email:string,password:string){\n        return initial.post('/auth/register',{email,password})\n    }\n\n}","import {Dispatch} from \"redux\";\nimport {RegAPI} from \"../../API/RegAPI\";\nimport {setIsLoading} from \"./app-reducer\";\n\nconst initialState: initialStateType = {\n    error: '',\n    isRegistered: false,\n}\n\ntype initialStateType = {\n    error: string | null\n    isRegistered: boolean\n\n}\n\nexport const registrationReducer = (state: initialStateType = initialState, action: registrationReducersActionsType): initialStateType => {\n    switch (action.type) {\n        case 'registration-reducers/SET-REGISTERED-SUCCESSFULLY': {\n            return {...state, isRegistered: action.successful}\n        }\n        case 'registration-reducers/SET-ERROR': {\n            return {...state, error: action.error}\n        }\n        default:\n            return state\n    }\n}\ntype registrationReducersActionsType = setRegisteredSuccessfullyType | setErrorType\nconst setRegisteredSuccessfully = () => {\n    return {\n        type: \"registration-reducers/SET-REGISTERED-SUCCESSFULLY\",\n        successful: true\n    } as const\n\n}\ntype setRegisteredSuccessfullyType = ReturnType<typeof setRegisteredSuccessfully>\nexport const setRegistrationError = (error: string) => {\n    return {\n        type: 'registration-reducers/SET-ERROR',\n        error\n    } as const\n}\ntype setErrorType = ReturnType<typeof setRegistrationError>\nexport const RegisteredUserTC = (email: string, password: string) => (dispatch: Dispatch) => {\n    dispatch(setIsLoading(true))\n    RegAPI.register(email, password).then(() => {\n        dispatch(setRegisteredSuccessfully())\n    })\n        .catch(() => {\n            dispatch(setRegistrationError(\"Email or password are invalid. Please, try registration again\"))\n        })\n        .finally(() => {\n            dispatch(setIsLoading(false))\n        })\n\n}\n\n","import React, {useState} from \"react\";\nimport style from './Registration.module.css'\nimport SuperInputText from \"../../common/c1-SuperInputText/SuperInputText\";\nimport SuperButton from \"../../common/c2-SuperButton/SuperButton\";\nimport {RegisteredUserTC, setRegistrationError} from \"../../bll/reducers/registration-reducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../bll/store\";\nimport {Navigate} from \"react-router-dom\";\nimport {PATH} from \"../../Header/Header\";\n\nexport const Registration = () => {\n    const dispatch = useDispatch()\n    const error = useSelector((state: AppRootStateType) => state.registration.error)\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [showPassword, setShowPassword] = useState(false)\n    const [showConfirmPassword, setShowConfirmPassword] = useState(false)\n    const onChangeEmail = (e: React.FormEvent<HTMLInputElement>) => {\n        setEmail(e.currentTarget.value)\n    }\n    const onChangePassword = (e: React.FormEvent<HTMLInputElement>) => {\n        setPassword(e.currentTarget.value)\n\n    }\n    const onChangeConfirmPassword = (e: React.FormEvent<HTMLInputElement>) => {\n        setConfirmPassword(e.currentTarget.value)\n\n    }\n    const changeShowPassword = (e: React.FormEvent<HTMLInputElement>) => {\n        setShowPassword(e.currentTarget.checked)\n    }\n    const changeShowConfirmPassword = (e: React.FormEvent<HTMLInputElement>) => {\n        setShowConfirmPassword(e.currentTarget.checked)\n    }\n    const fetchData = () => {\n        if (password !== confirmPassword) {\n            dispatch(setRegistrationError('Password confirmation does not match!'))\n        } else {\n            dispatch(RegisteredUserTC(email, password))\n            return (<Navigate to={PATH.LOGIN}/>)\n        }\n    }\n\n    return (\n        <div>\n            <div className={style.registration}>\n                <h1>It-incubator</h1>\n                <h2>Sign Up</h2>\n                <div>\n\n                    <div><SuperInputText value={email}\n                                         type={'email'}\n                                         onChange={onChangeEmail}\n                                         placeholder={'Email'}/></div>\n                    <div className={style.passwordBlock}>\n\n                        <SuperInputText\n                            className={style.password}\n                            value={password}\n                            onChange={onChangePassword}\n                            type={showPassword ? 'text' : 'password'}\n                            placeholder={'Password'}/>\n                        <input className={style.checkboxEye}\n                               type={'checkbox'}\n                               defaultChecked={showPassword}\n                               onClick={changeShowPassword}/></div>\n                    <div className={style.passwordBlock}>\n                        <SuperInputText\n                            className={style.password}\n                            value={confirmPassword}\n                            type={showConfirmPassword ? 'text' : 'password'}\n                            onChange={onChangeConfirmPassword}\n                            placeholder={'Confirm password'}/>\n                        <input className={style.checkboxEye}\n                               type={'checkbox'}\n                               defaultChecked={showConfirmPassword}\n                               onClick={changeShowConfirmPassword}/></div>\n\n\n                </div>\n                <div className={style.error}>{error && error}</div>\n                <div className={style.buttonBox}>\n                    <SuperButton className={style.superButton}>Cancel</SuperButton>\n                    <SuperButton className={style.superButtonReg} onClick={fetchData}>Register</SuperButton>\n                </div>\n\n            </div>\n        </div>\n    )\n}","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\nimport SuperInputText from '../c1-SuperInputText/SuperInputText'\n\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n}\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\n\n    const onEnterCallback = () => {\n\n        setEditMode(false) // выключить editMode при нажатии Enter\n\n        onEnter && onEnter()\n    }\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\n\n        onBlur && onBlur(e)\n    }\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        setEditMode(true)\n        onDoubleClick && onDoubleClick(e)\n    }\n\n    const spanClassName = `${''} ${className}`\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    )\n}\n\nexport default SuperEditableSpan\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\n    {\n        options,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const mappedOptions: any[] = options ? options.map((f, i) => {\n            return (\n                <option key={i+'-'+f} value={f}>{f}</option>\n\n            )\n        }\n    ) : []; // map options with key\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        onChange && onChange(e)\n        onChangeOption && onChangeOption(e.currentTarget.value)\n        // onChange, onChangeOption\n    }\n\n    return (\n        <select onChange={onChangeCallback} {...restProps}>\n            {mappedOptions}\n        </select>\n    )\n}\n\nexport default SuperSelect\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\n    {\n        type, name,\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange&&onChange(e)\n        onChangeOption&&onChangeOption(e.currentTarget.value)\n\n        // onChange, onChangeOption\n    }\n\n\n    const mappedOptions: any[] = options ? options.map((o, i) => (\n        <label key={name + '-' + i}>\n            <input onChange={onChangeCallback}\n                type={'radio'}\n                   name={name}\n                   checked={o===value}\n                   value={o}\n\n                // name, checked, value, onChange\n            />\n            {o}\n        </label>\n    )) : []\n\n    return (\n        <>\n            {mappedOptions}\n        </>\n    )\n}\n\nexport default SuperRadio\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperRange.module.css'\n\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperRangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeRange?: (value: number) => void\n};\n\nconst SuperRange: React.FC<SuperRangePropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeRange,\n        className,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e) // сохраняем старую функциональность\n\n        onChangeRange && onChangeRange(+e.currentTarget.value)\n    }\n\n    const finalRangeClassName = `${s.range} ${className ? className : ''}`\n\n    // @ts-ignore\n    return (\n        <>\n            <input\n                value={restProps.value}\n                type={'range'}\n                onChange={onChangeCallback}\n                className={finalRangeClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n        </>\n    )\n}\n\nexport default SuperRange\n","import React from 'react'\nimport style from './SuperDoubleRange.module.css'\nimport SuperRange from \"../c7-SuperRange/SuperRange\";\n\n\ntype SuperDoubleRangePropsType = {\n    onChangeRange?: (value: number[]) => void\n    value?: [number, number]\n    // min, max, step, disable, ...\n}\n\nexport const SuperDoubleRange = (props:SuperDoubleRangePropsType) => {\n    // сделать самому, можно подключать библиотеки\n\n    const onChangeMax=(max:number)=>{\n        if(props.onChangeRange&&props.value)\n        if(props.value[0] <= props.value[1] - 5) {\n            props.onChangeRange([props.value[0], max])\n        } else {\n            max >= 5 ? props.onChangeRange([max - 5, max]) : props.onChangeRange([0, max])\n        }\n    }\n    const onChangeMin = (min:number) => {\n        if(props.onChangeRange&&props.value)\n      if(props.value[0]<=props.value[1]-5){\n          props.onChangeRange([min,props.value[1]])\n      }\n      else{\n          min<=95?props.onChangeRange([min,min+5]):props.onChangeRange([min,props.value[1]])\n      }\n    }\n\n    return (\n     <div className={style.wrapper}>\n    <SuperRange  value={props.value&&props.value[0]} onChangeRange={onChangeMin}/>\n    <SuperRange className={style.double} value={props.value&&props.value[1]} onChangeRange={onChangeMax}/>\n     </div>\n    )\n}\n\n\n","import React from \"react\";\nimport SuperInputText from \"../../common/c1-SuperInputText/SuperInputText\";\nimport SuperButton from \"../../common/c2-SuperButton/SuperButton\";\nimport SuperCheckbox from \"../../common/c3-SuperCheckbox/SuperCheckbox\";\nimport SuperEditableSpan from \"../../common/c4-SuperEditableSpan/SuperEditableSpan\";\nimport SuperSelect from \"../../common/c5-SuperSelect/SuperSelect\";\nimport SuperRadio from \"../../common/c6-SuperRadio/SuperRadio\";\nimport SuperRange from \"../../common/c7-SuperRange/SuperRange\";\nimport {SuperDoubleRange} from \"../../common/c8-SuperDoubleRange/SuperDoubleRange\";\nimport style from './test.module.css'\nexport const Test = () => {\n  return(\n      <div className={style.test}>\n        <SuperInputText/>\n          <SuperButton>+</SuperButton>\n          <SuperCheckbox/>\n          <SuperEditableSpan/>\n          <SuperSelect/>\n          <SuperRadio/>\n          <SuperRange/>\n          <SuperDoubleRange/>\n\n\n      </div>\n  )\n}","export default __webpack_public_path__ + \"static/media/Group 281.724b6226.svg\";","import React from \"react\";\nimport style from './CheckEmail.module.css'\nimport img from './Group 281.svg'\n\nexport const CheckEmail = () => {\n    return (\n        <div>\n            <div className={style.checkEmail}>\n                <h1>It-incubator</h1>\n                <img alt={'Email'} src={img}/>\n                <h2>Check Email</h2>\n                <div className={style.text}>We've sent an Email with instructions to example@mail.com</div>\n\n            </div>\n        </div>\n    )\n}","import SuperInputText from \"../../common/c1-SuperInputText/SuperInputText\";\nimport SuperButton from \"../../common/c2-SuperButton/SuperButton\";\nimport style from './NewPassword.module.css'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../bll/store\";\nimport {newPasswordTC} from \"../../bll/reducers/restorePassword-reducer\";\nimport {useState} from \"react\";\nimport {useParams} from \"react-router-dom\";\n\nexport const NewPassword = () => {\n    type useParamsType = {\n        tokenId: string | undefined\n    }\n\n    const dispatch = useDispatch()\n    const newPass = useSelector((state: AppRootStateType) => state.restorePassword.newPass)\n    const [newPassword, setNewPassword] = useState('')\n    const onChangeNewPassword = (e: React.FormEvent<HTMLInputElement>) => {\n        setNewPassword(e.currentTarget.value)\n\n    }\n    const {tokenId}: useParamsType = useParams()\n    return (\n        <div>\n            <div className={style.newPassword}>\n                <h1>It-incubator</h1>\n                <h2>Create new password</h2>\n                <div><SuperInputText defaultValue={newPassword} onChange={onChangeNewPassword} type={'password'} placeholder={'Password'}/></div>\n                <div className={style.text}>\n                    <span>Create new password and we will send you further instructions to email</span></div>\n                <SuperButton\n                    className={style.superButton}\n                    onClick={() => {\n                    if (tokenId)\n                        dispatch(newPasswordTC(newPassword, tokenId))\n                }}>Create new password</SuperButton>\n            </div>\n        </div>\n    )\n}","import {Navigate, Route, Routes} from \"react-router-dom\";\nimport {PATH} from \"../Header/Header\";\nimport {Error} from \"../pages/Error/Error\";\nimport {Login} from \"../pages/Login/Login\";\nimport {RestorePassword} from \"../pages/RestorePassword/RestorePassword\";\nimport {Profile} from \"../pages/Profile/Profile\";\nimport {Registration} from \"../pages/Registration/Registration\";\nimport {Test} from \"../pages/Test/Test\";\nimport {CheckEmail} from \"../pages/CheckEmail/CheckEmail\";\nimport React from \"react\";\nimport {NewPassword} from \"../pages/NewPassword/NewPassword\";\n\nexport const RouteComponent = () => {\n    return (\n        <div>\n            <Routes>\n                <Route path={'/'} element={<Navigate to={PATH.LOGIN}/>}/>\n                <Route element={<Error/>} path={PATH.ERROR_404}/>\n                <Route element={<Login/>} path={PATH.LOGIN}/>\n                <Route element={<RestorePassword/>} path={PATH.RESTORE_PASSWORD}/>\n                <Route element={<Profile/>} path={PATH.PROFILE}/>\n                <Route element={<Registration/>} path={PATH.REGISTRATION}/>\n                <Route element={<Test/>} path={PATH.TEST}/>\n                <Route element={<CheckEmail/>} path={PATH.CHECK_EMAIL}/>\n                <Route element={<NewPassword/>} path={PATH.NEW_PASSWORD}/>\n                <Route element={<Error/>} path={'*'}/>\n\n\n            </Routes></div>\n    )\n}\n","import React from \"react\";\nimport style from './Preloader.module.css'\n\nexport const Preloader=()=>{\n    return(\n        <div className={style.box}>\n            <span className={style.spinner}></span>\n        </div>\n    )\n}","import React, {useEffect} from 'react';\nimport './App.css';\nimport {Header} from \"./Header/Header\";\n\nimport {RouteComponent} from './RouteComponent/RouteComponent';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {authMeTC} from \"./bll/reducers/login-reducer\";\nimport {AppRootStateType} from \"./bll/store\";\nimport {Preloader} from \"./pages/Preloader/Preloader\";\n\nfunction App() {\n    const isLoading = useSelector((state: AppRootStateType) => state.app.isLoading)\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(authMeTC())\n\n    }, [dispatch])\n\n    return (<div>\n            {isLoading && <Preloader/>}\n            <div className=\"App\">\n                <Header/>\n                <RouteComponent/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const initialState:any=[]\n\nexport const errorReducer=(state:any=initialState, action:any)=>{\n    switch (action.type){\n        case '':{\n            return state\n        }\n        default: return state\n    }\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport {errorReducer} from \"./reducers/error-reducer\";\nimport {loginReducer} from \"./reducers/login-reducer\";\nimport {registrationReducer} from \"./reducers/registration-reducer\";\nimport {restorePasswordReducer} from \"./reducers/restorePassword-reducer\";\nimport thunkMiddleware from 'redux-thunk'\nimport {appReducer} from \"./reducers/app-reducer\";\n\nconst rootReducer=combineReducers({\n    app:appReducer,\n    error:errorReducer,\n    login:loginReducer,\n    registration:registrationReducer,\n    restorePassword:restorePasswordReducer\n})\nexport const store=createStore(rootReducer,applyMiddleware(thunkMiddleware))\nexport type AppRootStateType=ReturnType<typeof rootReducer>\n\n//@ts-ignore\n\nwindow.store = store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./bll/store\";\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <React.StrictMode>\n                <App/>\n            </React.StrictMode>\n        </Provider>\n\n    </HashRouter>\n    ,\n    document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}